/* MIT - License

Copyright (c) 2012 - this year, Nils Schmidt

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */
package org.nschmidt.ldparteditor.i18n;

import java.awt.ComponentOrientation;
import java.lang.reflect.Field;
import java.util.Collection;
import java.util.ResourceBundle;
import java.util.SortedMap;
import java.util.TreeMap;

import org.eclipse.swt.SWT;
import org.nschmidt.ldparteditor.enumtype.MyLanguage;
import org.nschmidt.ldparteditor.enumtype.View;

/**
 * This class provides quick access to all translated Strings and RTL relevant constants (NEVER EVER FORMAT THIS CLASS!)
 * It does not have much documentation, I think this class is not so complex to understand.. ;)
 *
 */
public final class I18n {

    private static final Field[] fields = getSortedFields();

    /** Has the value {@code SWT.RIGHT_TO_LEFT} on systems with rtl languages */
    public static final int rightToLeftStyle() {return I18N_RTL;}
    private static final int I18N_RTL;
    /** Has the value {@code SWT.NONE} to indicate that this component does not support bi-directional text */
    public static final int noBiDirectionalTextStyle() {return SWT.NONE;}
    /** {@code true} on RTL systems */
    public static final boolean isRtl() {return IS_RTL;}
    private static final boolean IS_RTL;

    private static int lineOffset;

    private I18n() {}

    // Bundles
    private static final ResourceBundle EDITORTEXT = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.TextEditor", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle UNITS = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Units", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle PARTS = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Parts", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle VERSION = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Version", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle PERSPECTIVE = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Perspective", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle SPLASH = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.SplashScreen", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle PROJECT = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Project", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle COPYNPASTE = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.CopyAndPaste", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle DIALOG = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Dialog", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle E3D = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Editor3D", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle COLOUR = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Colour", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle COLOURDIALOG = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.ColourDialog", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle COMPOSITETAB = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.CompositeTab", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle COORDINATESDIALOG = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.CoordinatesDialog", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle DATFILE = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.DatFile", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle DATPARSER = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.DatParser", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle HINTFIXER = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.HintFixer", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle EDGER = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Edger", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle META = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Meta", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle MESHREDUCE = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.MeshReducer", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle INTERSECTOR = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Intersector", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle ISECALC = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Isecalc", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle LINES = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.LinesPattern", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle OPTIONS = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Options", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle PARTREVIEW = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.PartReview", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle PATHTRUDER = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.PathTruder", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle YTRUDER = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.YTruder", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle PRIMGEN = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.PrimGen", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle RECTIFIER = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Rectifier", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle RCONES = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.RingsAndCones", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle ROTATE = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Rotate", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle ROUND = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Round", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle SCALE = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Scale", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle SEARCH = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Search", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle SLANT = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.SlantingMatrixProjector", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle SLICERPRO = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Slicerpro", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle SMOOTH = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Smooth", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle SORT = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Sort", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle SYMSPLITTER = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Symsplitter", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle TJUNCTION = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.TJunctionFinder", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle TRANSLATE = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Translate", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle TREEITEM = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.TreeItem", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle TXT2DAT = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Txt2Dat", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle UNIFICATOR = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Unificator", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle VM = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.VertexManager", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle C3D = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Composite3D", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle KEYBOARD = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Keyboard", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle ERRORFIXER = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.ErrorFixer", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle SPINNER = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Spinner", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle DIRECTION = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Direction", MyLanguage.getLocale()); //$NON-NLS-1$
    private static final ResourceBundle INFOGRAPHIC = ResourceBundle.getBundle("org.nschmidt.ldparteditor.i18n.Infographic", MyLanguage.getLocale()); //$NON-NLS-1$
    // Bundles end

    private static boolean notAdjusted = true;

    private static void adjust() { // Calculate line offset
        StackTraceElement[] stackTraceElements = new Throwable().getStackTrace();
        String stack = stackTraceElements[0].toString();
        int lineNumber  = Integer.parseInt(stack.substring(stack.lastIndexOf(":") + 1, stack.lastIndexOf(")"))); //$NON-NLS-1$ //$NON-NLS-2$
        lineOffset = lineNumber + 7;
        notAdjusted = false;
    }
    // Constants (Need case sensitive sorting!)
    public static final String C3D_ANAGLYPH_3D = C3D.getString(getProperty());
    public static final String C3D_AXIS_LABEL = C3D.getString(getProperty());
    public static final String C3D_CONDLINE_MODE = C3D.getString(getProperty());
    public static final String C3D_CONDLINE_VERTICES = C3D.getString(getProperty());
    public static final String C3D_COPLANARITY_MODE = C3D.getString(getProperty());
    public static final String C3D_DELTA = C3D.getString(getProperty());
    public static final String C3D_GREEN_RED = C3D.getString(getProperty());
    public static final String C3D_GRID_SIZE = C3D.getString(getProperty());
    public static final String C3D_HIDDEN_VERTICES = C3D.getString(getProperty());
    public static final String C3D_HIDE_ALL = C3D.getString(getProperty());
    public static final String C3D_JOIN_SELECTION = C3D.getString(getProperty());
    public static final String C3D_LDRAW_LINES = C3D.getString(getProperty());
    public static final String C3D_LDRAW_STANDARD = C3D.getString(getProperty());
    public static final String C3D_LIGHTS = C3D.getString(getProperty());
    public static final String C3D_LOCK_FILE = C3D.getString(getProperty());
    public static final String C3D_MESH_LINES = C3D.getString(getProperty());
    public static final String C3D_NO_BACKFACE_CULLING = C3D.getString(getProperty());
    public static final String C3D_OPEN_IN_TEXT = C3D.getString(getProperty());
    public static final String C3D_PERSPECTIVE_LABEL = C3D.getString(getProperty());
    public static final String C3D_PREVIEW_NOTE = C3D.getString(getProperty());
    public static final String C3D_RANDOM_COLOURS = C3D.getString(getProperty());
    public static final String C3D_REAL_BACKFACE_CULLING = C3D.getString(getProperty());
    public static final String C3D_REAL_PREVIEW = C3D.getString(getProperty());
    public static final String C3D_RED_BACKFACES = C3D.getString(getProperty());
    public static final String C3D_RENDER_MODE = C3D.getString(getProperty());
    public static final String C3D_ROTATION = C3D.getString(getProperty());
    public static final String C3D_SELECTED_CONDLINE = C3D.getString(getProperty());
    public static final String C3D_SELECTED_CONDLINES = C3D.getString(getProperty());
    public static final String C3D_SELECTED_LINE = C3D.getString(getProperty());
    public static final String C3D_SELECTED_LINES = C3D.getString(getProperty());
    public static final String C3D_SELECTED_QUAD = C3D.getString(getProperty());
    public static final String C3D_SELECTED_QUADS = C3D.getString(getProperty());
    public static final String C3D_SELECTED_SUBFILE = C3D.getString(getProperty());
    public static final String C3D_SELECTED_SUBFILES = C3D.getString(getProperty());
    public static final String C3D_SELECTED_TRIANGLE = C3D.getString(getProperty());
    public static final String C3D_SELECTED_TRIANGLES = C3D.getString(getProperty());
    public static final String C3D_SELECTED_VERTEX = C3D.getString(getProperty());
    public static final String C3D_SELECTED_VERTICES = C3D.getString(getProperty());
    public static final String C3D_SET_GRID_SIZE = C3D.getString(getProperty());
    public static final String C3D_SHOW_ALL = C3D.getString(getProperty());
    public static final String C3D_SHOW_EDGES = C3D.getString(getProperty());
    public static final String C3D_SHOW_IN_TEXT = C3D.getString(getProperty());
    public static final String C3D_SMOOTH_SHADING = C3D.getString(getProperty());
    public static final String C3D_STUD_LOGO = C3D.getString(getProperty());
    public static final String C3D_SUBFILE_MESH_LINES = C3D.getString(getProperty());
    public static final String C3D_USE_ALWAYS_BLACK_LINES = C3D.getString(getProperty());
    public static final String C3D_VERTEX_2 = C3D.getString(getProperty());
    public static final String C3D_VERTEX_3 = C3D.getString(getProperty());
    public static final String C3D_VERTEX_4 = C3D.getString(getProperty());
    public static final String C3D_VERTICES = C3D.getString(getProperty());
    public static final String C3D_WIREFRAME = C3D.getString(getProperty());
    public static final String C3D_XYZ_AXIS = C3D.getString(getProperty());
    public static final String COLOURDIALOG_CHOOSE_DIRECT_COLOUR = COLOURDIALOG.getString(getProperty());
    public static final String COLOURDIALOG_COLOUR = COLOURDIALOG.getString(getProperty());
    public static final String COLOURDIALOG_COLOUR_TITLE = COLOURDIALOG.getString(getProperty());
    public static final String COLOURDIALOG_DIRECT_COLOUR = COLOURDIALOG.getString(getProperty());
    public static final String COLOURDIALOG_RANDOM_COLOURS = COLOURDIALOG.getString(getProperty());
    public static final String COLOURDIALOG_SHOW_COLOUR_TABLE = COLOURDIALOG.getString(getProperty());
    public static final String COLOURDIALOG_STANDARD_COLOURS = COLOURDIALOG.getString(getProperty());
    public static final String COLOUR_ADD_OBJECT_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_BACKGROUND_3D_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_BFC_BACK_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_BFC_FRONT_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_BFC_UNCERTIFIED = COLOUR.getString(getProperty());
    public static final String COLOUR_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_CURSOR_1_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_CURSOR_2_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_CUSTOMISE_COLOURS = COLOUR.getString(getProperty());
    public static final String COLOUR_DESCRIPTION = COLOUR.getString(getProperty());
    public static final String COLOUR_DOUBLE_CLICK = COLOUR.getString(getProperty());
    public static final String COLOUR_GRID_10_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_GRID_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_HIDDEN_CONDLINE_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_LIGHT_1_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_LIGHT_1_SPECULAR_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_LIGHT_2_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_LIGHT_2_SPECULAR_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_LIGHT_3_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_LIGHT_3_SPECULAR_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_LIGHT_4_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_LIGHT_4_SPECULAR_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_LINE_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_MANIPULATOR_INNER_CIRCLE_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_MANIPULATOR_OUTER_CIRCLE_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_MANIPULATOR_X_AXIS_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_MANIPULATOR_Y_AXIS_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_MANIPULATOR_Z_AXIS_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_MESH_LINE_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_ORIGIN_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_OVERRIDE_COLOUR_16 = COLOUR.getString(getProperty());
    public static final String COLOUR_PRIMITVE_BG_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_PRIMITVE_CATEGORY_CELL_1_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_PRIMITVE_CATEGORY_CELL_2_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_PRIMITVE_CELL_1_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_PRIMITVE_CELL_2_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_PRIMITVE_CONDLINE_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_PRIMITVE_EDGE_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_PRIMITVE_FOCUSED_CELL_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_PRIMITVE_NORMAL_CELL_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_PRIMITVE_PLUS_MINUS_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_PRIMITVE_SELECTED_CELL_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_PRIMITVE_SIGN_BG_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_PRIMITVE_SIGN_FG_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_RUBBERBAND_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_SELECTED_CONDLINE_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_SELECTED_MANIPULATOR_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_SELECTED_VERTEX_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_SHOWN_CONDLINE_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_TEXT_COLOUR_1 = COLOUR.getString(getProperty());
    public static final String COLOUR_TEXT_COLOUR_2 = COLOUR.getString(getProperty());
    public static final String COLOUR_TEXT_EDITOR_BG_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_TEXT_EDITOR_BOX_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_TEXT_EDITOR_COLOUR_ATTR_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_TEXT_EDITOR_COMMENT_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_TEXT_EDITOR_ERROR_UNDERLINE_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_TEXT_EDITOR_FG_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_TEXT_EDITOR_FG_COLOUR_HIDDEN = COLOUR.getString(getProperty());
    public static final String COLOUR_TEXT_EDITOR_HIGHLIGHT_BG_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_TEXT_EDITOR_HINT_UNDERLINE_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_TEXT_EDITOR_PRIMARY_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_TEXT_EDITOR_QUAD_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_TEXT_EDITOR_SECONDARY_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_TEXT_EDITOR_SELECTED_BG_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_TEXT_EDITOR_WARNING_UNDERLINE_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_VERTEX_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_X_AXIS_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_Y_AXIS_COLOUR = COLOUR.getString(getProperty());
    public static final String COLOUR_Z_AXIS_COLOUR = COLOUR.getString(getProperty());
    public static final String COMPOSITETAB_COPY_PROBLEM_INFO = COMPOSITETAB.getString(getProperty());
    public static final String COMPOSITETAB_DESCRIPTION = COMPOSITETAB.getString(getProperty());
    public static final String COMPOSITETAB_DUPLICATES = COMPOSITETAB.getString(getProperty());
    public static final String COMPOSITETAB_ERRORS = COMPOSITETAB.getString(getProperty());
    public static final String COMPOSITETAB_FILE_ENCODING_ERROR = COMPOSITETAB.getString(getProperty());
    public static final String COMPOSITETAB_FILE_NOT_FOUND = COMPOSITETAB.getString(getProperty());
    public static final String COMPOSITETAB_FILE_READ_ERROR = COMPOSITETAB.getString(getProperty());
    public static final String COMPOSITETAB_HINTS = COMPOSITETAB.getString(getProperty());
    public static final String COMPOSITETAB_INSPECT = COMPOSITETAB.getString(getProperty());
    public static final String COMPOSITETAB_INSPECT_SIMILAR = COMPOSITETAB.getString(getProperty());
    public static final String COMPOSITETAB_LOCATION = COMPOSITETAB.getString(getProperty());
    public static final String COMPOSITETAB_NEW_FILE = COMPOSITETAB.getString(getProperty());
    public static final String COMPOSITETAB_PROBLEMS = COMPOSITETAB.getString(getProperty());
    public static final String COMPOSITETAB_QUICK_FIX = COMPOSITETAB.getString(getProperty());
    public static final String COMPOSITETAB_QUICK_FIX_SIMILAR = COMPOSITETAB.getString(getProperty());
    public static final String COMPOSITETAB_TYPE = COMPOSITETAB.getString(getProperty());
    public static final String COMPOSITETAB_WARNINGS = COMPOSITETAB.getString(getProperty());
    public static final String COORDINATESDIALOG_CLIPBOARD = COORDINATESDIALOG.getString(getProperty());
    public static final String COORDINATESDIALOG_MANIPULATOR = COORDINATESDIALOG.getString(getProperty());
    public static final String COORDINATESDIALOG_SET_XYZ = COORDINATESDIALOG.getString(getProperty());
    public static final String COORDINATESDIALOG_X = COORDINATESDIALOG.getString(getProperty());
    public static final String COORDINATESDIALOG_Y = COORDINATESDIALOG.getString(getProperty());
    public static final String COORDINATESDIALOG_Z = COORDINATESDIALOG.getString(getProperty());
    public static final String COPYNPASTE_COPY = COPYNPASTE.getString(getProperty());
    public static final String COPYNPASTE_CUT = COPYNPASTE.getString(getProperty());
    public static final String COPYNPASTE_DELETE = COPYNPASTE.getString(getProperty());
    public static final String COPYNPASTE_PASTE = COPYNPASTE.getString(getProperty());
    public static final String DATFILE_CSG_TO_COMPILE = DATFILE.getString(getProperty());
    public static final String DATFILE_FOUND_T_JUNCTION = DATFILE.getString(getProperty());
    public static final String DATFILE_HEADER_HINT = DATFILE.getString(getProperty());
    public static final String DATFILE_INLINE_END = DATFILE.getString(getProperty());
    public static final String DATFILE_INLINE_PREFIX = DATFILE.getString(getProperty());
    public static final String DATFILE_INLINE_START = DATFILE.getString(getProperty());
    public static final String DATFILE_INVALID_UPDATE = DATFILE.getString(getProperty());
    public static final String DATFILE_LINE = DATFILE.getString(getProperty());
    public static final String DATFILE_MISSING_AUTHOR = DATFILE.getString(getProperty());
    public static final String DATFILE_MISSING_BFC = DATFILE.getString(getProperty());
    public static final String DATFILE_MISSING_FILENAME = DATFILE.getString(getProperty());
    public static final String DATFILE_MISSING_LICENSE = DATFILE.getString(getProperty());
    public static final String DATFILE_MISSING_PART_TYPE = DATFILE.getString(getProperty());
    public static final String DATFILE_MISSING_TITLE = DATFILE.getString(getProperty());
    public static final String DATFILE_MISSING_UNOFFICIAL = DATFILE.getString(getProperty());
    public static final String DATPARSER_COLLINEAR_VERTICES = DATPARSER.getString(getProperty());
    public static final String DATPARSER_CONCAVE_QUADRILATERAL = DATPARSER.getString(getProperty());
    public static final String DATPARSER_CONSTANT_AT = DATPARSER.getString(getProperty());
    public static final String DATPARSER_COPLANARITY = DATPARSER.getString(getProperty());
    public static final String DATPARSER_DATA_ERROR = DATPARSER.getString(getProperty());
    public static final String DATPARSER_DITHERED_COLOUR = DATPARSER.getString(getProperty());
    public static final String DATPARSER_DUPLICATED_AUTHOR = DATPARSER.getString(getProperty());
    public static final String DATPARSER_DUPLICATED_BFC = DATPARSER.getString(getProperty());
    public static final String DATPARSER_DUPLICATED_CATEGORY = DATPARSER.getString(getProperty());
    public static final String DATPARSER_DUPLICATED_COMMAND_LINE = DATPARSER.getString(getProperty());
    public static final String DATPARSER_DUPLICATED_FILENAME = DATPARSER.getString(getProperty());
    public static final String DATPARSER_DUPLICATED_LICENSE = DATPARSER.getString(getProperty());
    public static final String DATPARSER_DUPLICATED_LINES = DATPARSER.getString(getProperty());
    public static final String DATPARSER_DUPLICATED_TYPE = DATPARSER.getString(getProperty());
    public static final String DATPARSER_FILENAME_WHITESPACE = DATPARSER.getString(getProperty());
    public static final String DATPARSER_FILE_NOT_FOUND = DATPARSER.getString(getProperty());
    public static final String DATPARSER_FORMAT_HINT = DATPARSER.getString(getProperty());
    public static final String DATPARSER_HEADER_HINT = DATPARSER.getString(getProperty());
    public static final String DATPARSER_HISTORY_WRONG_ORDER = DATPARSER.getString(getProperty());
    public static final String DATPARSER_HOURGLASS_QUADRILATERAL = DATPARSER.getString(getProperty());
    public static final String DATPARSER_IDENTICAL_CONTROL_POINTS = DATPARSER.getString(getProperty());
    public static final String DATPARSER_IDENTICAL_VERTICES = DATPARSER.getString(getProperty());
    public static final String DATPARSER_INLINING_RELICT = DATPARSER.getString(getProperty());
    public static final String DATPARSER_INVALID_CASE = DATPARSER.getString(getProperty());
    public static final String DATPARSER_INVALID_COLOUR = DATPARSER.getString(getProperty());
    public static final String DATPARSER_INVALID_COMMENT = DATPARSER.getString(getProperty());
    public static final String DATPARSER_INVALID_HEADER = DATPARSER.getString(getProperty());
    public static final String DATPARSER_INVALID_INVERT_NEXT = DATPARSER.getString(getProperty());
    public static final String DATPARSER_INVALID_INVERT_NEXT_FLAT = DATPARSER.getString(getProperty());
    public static final String DATPARSER_INVALID_NUMBER_FORMAT = DATPARSER.getString(getProperty());
    public static final String DATPARSER_INVALID_TEXMAP = DATPARSER.getString(getProperty());
    public static final String DATPARSER_INVALID_TYPE = DATPARSER.getString(getProperty());
    public static final String DATPARSER_INVISIBLE_LINE = DATPARSER.getString(getProperty());
    public static final String DATPARSER_LOGIC_ERROR = DATPARSER.getString(getProperty());
    public static final String DATPARSER_MISPLACED_AUTHOR = DATPARSER.getString(getProperty());
    public static final String DATPARSER_MISPLACED_BFC = DATPARSER.getString(getProperty());
    public static final String DATPARSER_MISPLACED_BFC_0 = DATPARSER.getString(getProperty());
    public static final String DATPARSER_MISPLACED_CATEGORY = DATPARSER.getString(getProperty());
    public static final String DATPARSER_MISPLACED_COMMAND_LINE = DATPARSER.getString(getProperty());
    public static final String DATPARSER_MISPLACED_COMMENT = DATPARSER.getString(getProperty());
    public static final String DATPARSER_MISPLACED_FILENAME = DATPARSER.getString(getProperty());
    public static final String DATPARSER_MISPLACED_HELP = DATPARSER.getString(getProperty());
    public static final String DATPARSER_MISPLACED_HISTORY = DATPARSER.getString(getProperty());
    public static final String DATPARSER_MISPLACED_KEYWORD = DATPARSER.getString(getProperty());
    public static final String DATPARSER_MISPLACED_LICENSE = DATPARSER.getString(getProperty());
    public static final String DATPARSER_MISPLACED_TITLE = DATPARSER.getString(getProperty());
    public static final String DATPARSER_MISPLACED_TYPE = DATPARSER.getString(getProperty());
    public static final String DATPARSER_MLCAD_CLIP = DATPARSER.getString(getProperty());
    public static final String DATPARSER_MLCAD_CLIP_CCW = DATPARSER.getString(getProperty());
    public static final String DATPARSER_MLCAD_CLIP_CW = DATPARSER.getString(getProperty());
    public static final String DATPARSER_MLCAD_INVERT_NEXT = DATPARSER.getString(getProperty());
    public static final String DATPARSER_MLCAD_NO_CLIP = DATPARSER.getString(getProperty());
    public static final String DATPARSER_MOVED_TO = DATPARSER.getString(getProperty());
    public static final String DATPARSER_MULTIPLE_BFC = DATPARSER.getString(getProperty());
    public static final String DATPARSER_NEAR_COPLANARITY = DATPARSER.getString(getProperty());
    public static final String DATPARSER_RECURSIVE = DATPARSER.getString(getProperty());
    public static final String DATPARSER_SINGULAR_MATRIX = DATPARSER.getString(getProperty());
    public static final String DATPARSER_SPLIT_BFC = DATPARSER.getString(getProperty());
    public static final String DATPARSER_SPLIT_COMMMENT = DATPARSER.getString(getProperty());
    public static final String DATPARSER_SPLIT_HELP = DATPARSER.getString(getProperty());
    public static final String DATPARSER_SPLIT_HISTORY = DATPARSER.getString(getProperty());
    public static final String DATPARSER_SPLIT_KEYWORD = DATPARSER.getString(getProperty());
    public static final String DATPARSER_SYNTAX_ERROR = DATPARSER.getString(getProperty());
    public static final String DATPARSER_TODO = DATPARSER.getString(getProperty());
    public static final String DATPARSER_UNKNOWN_LINE_TYPE = DATPARSER.getString(getProperty());
    public static final String DATPARSER_UNOFFICIAL_META_COMMAND = DATPARSER.getString(getProperty());
    public static final String DATPARSER_VERTEX_AT = DATPARSER.getString(getProperty());
    public static final String DATPARSER_VERTEX_DECLARATION = DATPARSER.getString(getProperty());
    public static final String DATPARSER_WARNING = DATPARSER.getString(getProperty());
    public static final String DATPARSER_WRONG_ARGUMENT_COUNT = DATPARSER.getString(getProperty());
    public static final String DIALOG_ALREADY_ALLOCATED_NAME = DIALOG.getString(getProperty());
    public static final String DIALOG_ALREADY_ALLOCATED_NAME_TITLE = DIALOG.getString(getProperty());
    public static final String DIALOG_APPLY = DIALOG.getString(getProperty());
    public static final String DIALOG_BROWSE = DIALOG.getString(getProperty());
    public static final String DIALOG_CANCEL = DIALOG.getString(getProperty());
    public static final String DIALOG_CANT_SAVE_FILE = DIALOG.getString(getProperty());
    public static final String DIALOG_CANT_SAVE_PROJECT = DIALOG.getString(getProperty());
    public static final String DIALOG_COPY_FILE_AND_REQUIRED = DIALOG.getString(getProperty());
    public static final String DIALOG_COPY_FILE_AND_REQUIRED_AND_RELATED = DIALOG.getString(getProperty());
    public static final String DIALOG_COPY_FILE_ONLY = DIALOG.getString(getProperty());
    public static final String DIALOG_CREATE_META_COMMAND = DIALOG.getString(getProperty());
    public static final String DIALOG_DELETE = DIALOG.getString(getProperty());
    public static final String DIALOG_DELETE_TITLE = DIALOG.getString(getProperty());
    public static final String DIALOG_DIRECTORY_SELECT = DIALOG.getString(getProperty());
    public static final String DIALOG_ERROR = DIALOG.getString(getProperty());
    public static final String DIALOG_INFO = DIALOG.getString(getProperty());
    public static final String DIALOG_I_DONT_KNOW = DIALOG.getString(getProperty());
    public static final String DIALOG_KEEP_FILES_OPEN = DIALOG.getString(getProperty());
    public static final String DIALOG_KEEP_FILES_OPEN_TITLE = DIALOG.getString(getProperty());
    public static final String DIALOG_MODIFIED = DIALOG.getString(getProperty());
    public static final String DIALOG_MODIFIED_TITLE = DIALOG.getString(getProperty());
    public static final String DIALOG_NO = DIALOG.getString(getProperty());
    public static final String DIALOG_NOT_FOUND_REQUIRED = DIALOG.getString(getProperty());
    public static final String DIALOG_NOT_FOUND_REQUIRED_TITLE = DIALOG.getString(getProperty());
    public static final String DIALOG_NO_PROJECT_LOCATION = DIALOG.getString(getProperty());
    public static final String DIALOG_NO_PROJECT_LOCATION_TITLE = DIALOG.getString(getProperty());
    public static final String DIALOG_OK = DIALOG.getString(getProperty());
    public static final String DIALOG_RENAME_OR_MOVE = DIALOG.getString(getProperty());
    public static final String DIALOG_REPLACE = DIALOG.getString(getProperty());
    public static final String DIALOG_REPLACE_TITLE = DIALOG.getString(getProperty());
    public static final String DIALOG_REVERT = DIALOG.getString(getProperty());
    public static final String DIALOG_REVERT_TITLE = DIALOG.getString(getProperty());
    public static final String DIALOG_SKIP_ALL = DIALOG.getString(getProperty());
    public static final String DIALOG_SYNC = DIALOG.getString(getProperty());
    public static final String DIALOG_SYNC_TITLE = DIALOG.getString(getProperty());
    public static final String DIALOG_THE_NEW_PROJECT = DIALOG.getString(getProperty());
    public static final String DIALOG_THE_OLD_PROJECT = DIALOG.getString(getProperty());
    public static final String DIALOG_UNSAVED_CHANGES = DIALOG.getString(getProperty());
    public static final String DIALOG_UNSAVED_CHANGES_TITLE = DIALOG.getString(getProperty());
    public static final String DIALOG_WARNING = DIALOG.getString(getProperty());
    public static final String DIALOG_YES = DIALOG.getString(getProperty());
    public static final String DIRECTION_ANG_PHI = DIRECTION.getString(getProperty());
    public static final String DIRECTION_ANG_RHO = DIRECTION.getString(getProperty());
    public static final String DIRECTION_ANG_THETA = DIRECTION.getString(getProperty());
    public static final String DIRECTION_CARTESIAN_COORDS = DIRECTION.getString(getProperty());
    public static final String DIRECTION_DIRECTION_VECTOR = DIRECTION.getString(getProperty());
    public static final String DIRECTION_MANIPULATOR_X = DIRECTION.getString(getProperty());
    public static final String DIRECTION_MANIPULATOR_Y = DIRECTION.getString(getProperty());
    public static final String DIRECTION_MANIPULATOR_Z = DIRECTION.getString(getProperty());
    public static final String DIRECTION_SPHERICAL_COORDS = DIRECTION.getString(getProperty());
    public static final String DIRECTION_X = DIRECTION.getString(getProperty());
    public static final String DIRECTION_Y = DIRECTION.getString(getProperty());
    public static final String DIRECTION_Z = DIRECTION.getString(getProperty());
    public static final String E3D_ADD_COMMENT = E3D.getString(getProperty());
    public static final String E3D_ADD_CONDLINE = E3D.getString(getProperty());
    public static final String E3D_ADD_DISTANCE = E3D.getString(getProperty());
    public static final String E3D_ADD_LINE = E3D.getString(getProperty());
    public static final String E3D_ADD_PROTRACTOR = E3D.getString(getProperty());
    public static final String E3D_ADD_QUAD = E3D.getString(getProperty());
    public static final String E3D_ADD_SUBPART = E3D.getString(getProperty());
    public static final String E3D_ADD_TRIANGLE = E3D.getString(getProperty());
    public static final String E3D_ADD_VERTEX = E3D.getString(getProperty());
    public static final String E3D_ADJACENT_WARNING_DIALOG = E3D.getString(getProperty());
    public static final String E3D_ADJACENT_WARNING_STATUS = E3D.getString(getProperty());
    public static final String E3D_ADJUST_ROTATION_CENTER = E3D.getString(getProperty());
    public static final String E3D_ADVANCED_SELECT = E3D.getString(getProperty());
    public static final String E3D_ALIGN_AND_DISTRIBUTE = E3D.getString(getProperty());
    public static final String E3D_ALIGN_BOTTOM_EDGES = E3D.getString(getProperty());
    public static final String E3D_ALIGN_HORIZONTAL_CENTERS = E3D.getString(getProperty());
    public static final String E3D_ALIGN_LEFT_EDGES = E3D.getString(getProperty());
    public static final String E3D_ALIGN_RIGHT_EDGES = E3D.getString(getProperty());
    public static final String E3D_ALIGN_TOP_EDGES = E3D.getString(getProperty());
    public static final String E3D_ALIGN_VERTICAL_CENTERS = E3D.getString(getProperty());
    public static final String E3D_ALL = E3D.getString(getProperty());
    public static final String E3D_ALL_FILES = E3D.getString(getProperty());
    public static final String E3D_ALL_SAME_COLOURS = E3D.getString(getProperty());
    public static final String E3D_ALL_SAME_COLOURS_SHOWN = E3D.getString(getProperty());
    public static final String E3D_ALL_SHOWN = E3D.getString(getProperty());
    public static final String E3D_ALL_TYPES = E3D.getString(getProperty());
    public static final String E3D_ALT_TO_DESELECT = E3D.getString(getProperty());
    public static final String E3D_ANGLE_DIFF = E3D.getString(getProperty());
    public static final String E3D_ANGLE_X = E3D.getString(getProperty());
    public static final String E3D_ANGLE_Y = E3D.getString(getProperty());
    public static final String E3D_ANGLE_Z = E3D.getString(getProperty());
    public static final String E3D_ANTI_ALIASING = E3D.getString(getProperty());
    public static final String E3D_BACKGROUND_IMAGE = E3D.getString(getProperty());
    public static final String E3D_CAM_TO_MANIPULATOR = E3D.getString(getProperty());
    public static final String E3D_CANT_CONNECT_TO_LDRAW_ORG = E3D.getString(getProperty());
    public static final String E3D_CLOSE = E3D.getString(getProperty());
    public static final String E3D_CLOSE_VIEW = E3D.getString(getProperty());
    public static final String E3D_COARSE = E3D.getString(getProperty());
    public static final String E3D_COLOUR_16 = E3D.getString(getProperty());
    public static final String E3D_COMBINED = E3D.getString(getProperty());
    public static final String E3D_COMPILE_SUBFILE_DATA = E3D.getString(getProperty());
    public static final String E3D_CONDLINES = E3D.getString(getProperty());
    public static final String E3D_CONDLINE_TO_LINE = E3D.getString(getProperty());
    public static final String E3D_CONNECTED = E3D.getString(getProperty());
    public static final String E3D_CONTROL_CLICK_MODIFY = E3D.getString(getProperty());
    public static final String E3D_CONTROL_CLICK_SURFACE = E3D.getString(getProperty());
    public static final String E3D_CONVERTER = E3D.getString(getProperty());
    public static final String E3D_COPY_TO_UNOFFICIAL_LIBRARY = E3D.getString(getProperty());
    public static final String E3D_CREATE_NEW_DAT = E3D.getString(getProperty());
    public static final String E3D_CREATE_TRANSFORMED_COPY = E3D.getString(getProperty());
    public static final String E3D_CSG_OPTIMISATION = E3D.getString(getProperty());
    public static final String E3D_DECOLOUR = E3D.getString(getProperty());
    public static final String E3D_DELETE_CONFIG = E3D.getString(getProperty());
    public static final String E3D_DISTRIBUTE_BOTTOM_EDGES = E3D.getString(getProperty());
    public static final String E3D_DISTRIBUTE_HORIZONTALLY = E3D.getString(getProperty());
    public static final String E3D_DISTRIBUTE_HORIZONTAL_CENTERS = E3D.getString(getProperty());
    public static final String E3D_DISTRIBUTE_LEFT_EDGES = E3D.getString(getProperty());
    public static final String E3D_DISTRIBUTE_RIGHT_EDGES = E3D.getString(getProperty());
    public static final String E3D_DISTRIBUTE_TOP_EDGES = E3D.getString(getProperty());
    public static final String E3D_DISTRIBUTE_VERTICALLY = E3D.getString(getProperty());
    public static final String E3D_DISTRIBUTE_VERTICAL_CENTERS = E3D.getString(getProperty());
    public static final String E3D_DOWNLOAD_CATEGORIES = E3D.getString(getProperty());
    public static final String E3D_DOWNLOAD_LD_CONFIG = E3D.getString(getProperty());
    public static final String E3D_DRAFT = E3D.getString(getProperty());
    public static final String E3D_DRAG_HINT = E3D.getString(getProperty());
    public static final String E3D_EDGER_2 = E3D.getString(getProperty());
    public static final String E3D_END_PART_REVIEW = E3D.getString(getProperty());
    public static final String E3D_EVERYTHING = E3D.getString(getProperty());
    public static final String E3D_EXCEPT_SUBFILE = E3D.getString(getProperty());
    public static final String E3D_EXIT = E3D.getString(getProperty());
    public static final String E3D_FAR_CLIPPING = E3D.getString(getProperty());
    public static final String E3D_FAR_CLIPPING_HINT = E3D.getString(getProperty());
    public static final String E3D_FILE = E3D.getString(getProperty());
    public static final String E3D_FILE_WAS_REPLACED = E3D.getString(getProperty());
    public static final String E3D_FILE_WAS_REPLACED_ERROR = E3D.getString(getProperty());
    public static final String E3D_FINE = E3D.getString(getProperty());
    public static final String E3D_FLIP_ROTATE = E3D.getString(getProperty());
    public static final String E3D_FOCUS = E3D.getString(getProperty());
    public static final String E3D_GLOBAL = E3D.getString(getProperty());
    public static final String E3D_GRID = E3D.getString(getProperty());
    public static final String E3D_GRID_COARSE_DEFAULT = E3D.getString(getProperty());
    public static final String E3D_GRID_FINE_DEFAULT = E3D.getString(getProperty());
    public static final String E3D_GRID_MEDIUM_DEFAULT = E3D.getString(getProperty());
    public static final String E3D_GRID_STUD_DEFAULT = E3D.getString(getProperty());
    public static final String E3D_GROUP = E3D.getString(getProperty());
    public static final String E3D_HIDE = E3D.getString(getProperty());
    public static final String E3D_ICON_SIZE_1 = E3D.getString(getProperty());
    public static final String E3D_ICON_SIZE_2 = E3D.getString(getProperty());
    public static final String E3D_ICON_SIZE_3 = E3D.getString(getProperty());
    public static final String E3D_ICON_SIZE_4 = E3D.getString(getProperty());
    public static final String E3D_ICON_SIZE_5 = E3D.getString(getProperty());
    public static final String E3D_ICON_SIZE_6 = E3D.getString(getProperty());
    public static final String E3D_IMAGE = E3D.getString(getProperty());
    public static final String E3D_INSERT_AT_CURSOR_POSITION = E3D.getString(getProperty());
    public static final String E3D_INTERSECTION_POINTS_QUESTION = E3D.getString(getProperty());
    public static final String E3D_INTERSECTOR = E3D.getString(getProperty());
    public static final String E3D_INVALID_COLOUR = E3D.getString(getProperty());
    public static final String E3D_INVALID_FILENAME = E3D.getString(getProperty());
    public static final String E3D_INVALID_MATRIX = E3D.getString(getProperty());
    public static final String E3D_INVERSE = E3D.getString(getProperty());
    public static final String E3D_ISECALC = E3D.getString(getProperty());
    public static final String E3D_ISOLATED_VERTICES = E3D.getString(getProperty());
    public static final String E3D_ITERATIONS = E3D.getString(getProperty());
    public static final String E3D_LAST_OPENED = E3D.getString(getProperty());
    public static final String E3D_LAST_PROJECT = E3D.getString(getProperty());
    public static final String E3D_LDRAW_CONFIGURATION_FILE_1 = E3D.getString(getProperty());
    public static final String E3D_LDRAW_CONFIGURATION_FILE_2 = E3D.getString(getProperty());
    public static final String E3D_LDRAW_SOURCE_FILE = E3D.getString(getProperty());
    public static final String E3D_LIBRARY_FEATURES = E3D.getString(getProperty());
    public static final String E3D_LINES = E3D.getString(getProperty());
    public static final String E3D_LINES_2_PATTERN = E3D.getString(getProperty());
    public static final String E3D_LINE_INTERSECTION = E3D.getString(getProperty());
    public static final String E3D_LINE_OPENGL = E3D.getString(getProperty());
    public static final String E3D_LINE_SCALE = E3D.getString(getProperty());
    public static final String E3D_LINE_SCALE_EXPLANATION = E3D.getString(getProperty());
    public static final String E3D_LINE_SIZE_0 = E3D.getString(getProperty());
    public static final String E3D_LINE_SIZE_1 = E3D.getString(getProperty());
    public static final String E3D_LINE_SIZE_2 = E3D.getString(getProperty());
    public static final String E3D_LINE_SIZE_3 = E3D.getString(getProperty());
    public static final String E3D_LINE_SIZE_4 = E3D.getString(getProperty());
    public static final String E3D_LINE_SIZE_5 = E3D.getString(getProperty());
    public static final String E3D_LINE_SURFACE_INTERSECTION = E3D.getString(getProperty());
    public static final String E3D_LINE_TO_CONDLINE = E3D.getString(getProperty());
    public static final String E3D_LOADING_DATA = E3D.getString(getProperty());
    public static final String E3D_LOADING_LIBRARY = E3D.getString(getProperty());
    public static final String E3D_LOADING_PRIMITIVES = E3D.getString(getProperty());
    public static final String E3D_LOCAL = E3D.getString(getProperty());
    public static final String E3D_LOCK_PROTRACTOR_ANGLES = E3D.getString(getProperty());
    public static final String E3D_LOCK_PROTRACTOR_TOOLTIP = E3D.getString(getProperty());
    public static final String E3D_LOG_SHOW_DATA = E3D.getString(getProperty());
    public static final String E3D_LOG_SHOW_NO_LOG_FILES = E3D.getString(getProperty());
    public static final String E3D_LOG_SHOW_UNEXPECTED_EXCEPTION = E3D.getString(getProperty());
    public static final String E3D_MANIPULATOR_TO_AVG = E3D.getString(getProperty());
    public static final String E3D_MANIPULATOR_TO_EDGE = E3D.getString(getProperty());
    public static final String E3D_MANIPULATOR_TO_EDGE_N = E3D.getString(getProperty());
    public static final String E3D_MANIPULATOR_TO_FACE = E3D.getString(getProperty());
    public static final String E3D_MANIPULATOR_TO_FACE_N = E3D.getString(getProperty());
    public static final String E3D_MANIPULATOR_TO_ORIGIN = E3D.getString(getProperty());
    public static final String E3D_MANIPULATOR_TO_SUBFILE = E3D.getString(getProperty());
    public static final String E3D_MANIPULATOR_TO_VERTEX = E3D.getString(getProperty());
    public static final String E3D_MANIPULATOR_TO_VERTEX_N = E3D.getString(getProperty());
    public static final String E3D_MANIPULATOR_TO_VERTEX_P = E3D.getString(getProperty());
    public static final String E3D_MANIPULATOR_TO_WORLD = E3D.getString(getProperty());
    public static final String E3D_MEDIUM = E3D.getString(getProperty());
    public static final String E3D_MERGE_QUAD = E3D.getString(getProperty());
    public static final String E3D_MERGE_SPLIT = E3D.getString(getProperty());
    public static final String E3D_MERGE_TO_AVG = E3D.getString(getProperty());
    public static final String E3D_MERGE_TO_LAST_SELECTED = E3D.getString(getProperty());
    public static final String E3D_MERGE_TO_NEAREST_EDGE = E3D.getString(getProperty());
    public static final String E3D_MERGE_TO_NEAREST_EDGE_SPLIT = E3D.getString(getProperty());
    public static final String E3D_MERGE_TO_NEAREST_FACE = E3D.getString(getProperty());
    public static final String E3D_MERGE_TO_NEAREST_FACE_DIR = E3D.getString(getProperty());
    public static final String E3D_MERGE_TO_NEAREST_VERTEX = E3D.getString(getProperty());
    public static final String E3D_MERGE_VERTEX = E3D.getString(getProperty());
    public static final String E3D_MESH_REDUCE = E3D.getString(getProperty());
    public static final String E3D_MODE_LINE = E3D.getString(getProperty());
    public static final String E3D_MODE_SUBPART = E3D.getString(getProperty());
    public static final String E3D_MODE_SURFACE = E3D.getString(getProperty());
    public static final String E3D_MODE_VERTEX = E3D.getString(getProperty());
    public static final String E3D_MODIFY_MANIPULATOR = E3D.getString(getProperty());
    public static final String E3D_MORE = E3D.getString(getProperty());
    public static final String E3D_MOVE = E3D.getString(getProperty());
    public static final String E3D_MOVE_ADJACENT_DATA = E3D.getString(getProperty());
    public static final String E3D_MOVE_ON_LINE = E3D.getString(getProperty());
    public static final String E3D_MOVE_SNAP = E3D.getString(getProperty());
    public static final String E3D_NEAR_CLIPPING = E3D.getString(getProperty());
    public static final String E3D_NEAR_CLIPPING_HINT = E3D.getString(getProperty());
    public static final String E3D_NEEDS_A_THRESHOLD = E3D.getString(getProperty());
    public static final String E3D_NEW = E3D.getString(getProperty());
    public static final String E3D_NEW_DAT = E3D.getString(getProperty());
    public static final String E3D_NEW_ENGINE = E3D.getString(getProperty());
    public static final String E3D_NEW_FILE = E3D.getString(getProperty());
    public static final String E3D_NEXT = E3D.getString(getProperty());
    public static final String E3D_NEXT_ITEM = E3D.getString(getProperty());
    public static final String E3D_NONE = E3D.getString(getProperty());
    public static final String E3D_NOTHING = E3D.getString(getProperty());
    public static final String E3D_NO_EFFECT_SELECT_EVERYTHING = E3D.getString(getProperty());
    public static final String E3D_NO_FILE_SELECTED = E3D.getString(getProperty());
    public static final String E3D_NO_PRIMITIVE_LOADED = E3D.getString(getProperty());
    public static final String E3D_NO_PRIMITIVE_SELECTED = E3D.getString(getProperty());
    public static final String E3D_NUMBER_OF_FRACTIONS = E3D.getString(getProperty());
    public static final String E3D_ONLY_CONDLINES = E3D.getString(getProperty());
    public static final String E3D_ONLY_LINES = E3D.getString(getProperty());
    public static final String E3D_ONLY_QUADS = E3D.getString(getProperty());
    public static final String E3D_ONLY_TRIANGLES = E3D.getString(getProperty());
    public static final String E3D_OPEN = E3D.getString(getProperty());
    public static final String E3D_OPEN_DAT = E3D.getString(getProperty());
    public static final String E3D_OPEN_DAT_FILE = E3D.getString(getProperty());
    public static final String E3D_OPEN_IN_3D_EDITOR = E3D.getString(getProperty());
    public static final String E3D_OPEN_IN_TEXT_EDITOR = E3D.getString(getProperty());
    public static final String E3D_OPEN_LDCONFIG = E3D.getString(getProperty());
    public static final String E3D_OPEN_PNG_IMAGE = E3D.getString(getProperty());
    public static final String E3D_OPTIONS = E3D.getString(getProperty());
    public static final String E3D_ORIGIN = E3D.getString(getProperty());
    public static final String E3D_PALETTE = E3D.getString(getProperty());
    public static final String E3D_PALETTE_LOAD = E3D.getString(getProperty());
    public static final String E3D_PALETTE_RESET = E3D.getString(getProperty());
    public static final String E3D_PALETTE_SAVE = E3D.getString(getProperty());
    public static final String E3D_PALETTE_SET_SIZE = E3D.getString(getProperty());
    public static final String E3D_PARSE_INLINE = E3D.getString(getProperty());
    public static final String E3D_PATH_TRUDER = E3D.getString(getProperty());
    public static final String E3D_PIPETTE = E3D.getString(getProperty());
    public static final String E3D_PORTABLE_NETWORK_GRAPHICS = E3D.getString(getProperty());
    public static final String E3D_POSITION_X = E3D.getString(getProperty());
    public static final String E3D_POSITION_X1 = E3D.getString(getProperty());
    public static final String E3D_POSITION_X2 = E3D.getString(getProperty());
    public static final String E3D_POSITION_X3 = E3D.getString(getProperty());
    public static final String E3D_POSITION_X4 = E3D.getString(getProperty());
    public static final String E3D_POSITION_Y = E3D.getString(getProperty());
    public static final String E3D_POSITION_Y1 = E3D.getString(getProperty());
    public static final String E3D_POSITION_Y2 = E3D.getString(getProperty());
    public static final String E3D_POSITION_Y3 = E3D.getString(getProperty());
    public static final String E3D_POSITION_Y4 = E3D.getString(getProperty());
    public static final String E3D_POSITION_Z = E3D.getString(getProperty());
    public static final String E3D_POSITION_Z1 = E3D.getString(getProperty());
    public static final String E3D_POSITION_Z2 = E3D.getString(getProperty());
    public static final String E3D_POSITION_Z3 = E3D.getString(getProperty());
    public static final String E3D_POSITION_Z4 = E3D.getString(getProperty());
    public static final String E3D_PREVIOUS = E3D.getString(getProperty());
    public static final String E3D_PREVIOUS_ITEM = E3D.getString(getProperty());
    public static final String E3D_PRIMGEN2 = E3D.getString(getProperty());
    public static final String E3D_PROTRACTOR_ANGLE = E3D.getString(getProperty());
    public static final String E3D_PROTRACTOR_LENGTH = E3D.getString(getProperty());
    public static final String E3D_PROTRACTOR_LENGTH_MM = E3D.getString(getProperty());
    public static final String E3D_QUADS = E3D.getString(getProperty());
    public static final String E3D_READY_STATUS = E3D.getString(getProperty());
    public static final String E3D_RECTIFIER = E3D.getString(getProperty());
    public static final String E3D_REDO = E3D.getString(getProperty());
    public static final String E3D_REDUCE_COUNT = E3D.getString(getProperty());
    public static final String E3D_RENAME_MOVE = E3D.getString(getProperty());
    public static final String E3D_REOPEN_3D_VIEW = E3D.getString(getProperty());
    public static final String E3D_REPLACE_CATEGORIES = E3D.getString(getProperty());
    public static final String E3D_REPLACE_LDCONFIG = E3D.getString(getProperty());
    public static final String E3D_REQUIRES_RESTART = E3D.getString(getProperty());
    public static final String E3D_RESET = E3D.getString(getProperty());
    public static final String E3D_RESET_ALL = E3D.getString(getProperty());
    public static final String E3D_REVERSE_X = E3D.getString(getProperty());
    public static final String E3D_REVERSE_Y = E3D.getString(getProperty());
    public static final String E3D_REVERSE_Z = E3D.getString(getProperty());
    public static final String E3D_REVERT_ALL_CHANGES = E3D.getString(getProperty());
    public static final String E3D_RINGS_AND_CONES = E3D.getString(getProperty());
    public static final String E3D_ROTATE = E3D.getString(getProperty());
    public static final String E3D_ROTATE_CLOCKWISE = E3D.getString(getProperty());
    public static final String E3D_ROTATE_SELECTION = E3D.getString(getProperty());
    public static final String E3D_ROTATE_SNAP = E3D.getString(getProperty());
    public static final String E3D_ROTATE_VIEW_HINT_MAC = E3D.getString(getProperty());
    public static final String E3D_ROTATE_VIEW_HINT_MIDDLE_MOUSE = E3D.getString(getProperty());
    public static final String E3D_ROTATE_VIEW_HINT_RIGHT_MOUSE = E3D.getString(getProperty());
    public static final String E3D_ROUND = E3D.getString(getProperty());
    public static final String E3D_RULER = E3D.getString(getProperty());
    public static final String E3D_SASH_LEFT = E3D.getString(getProperty());
    public static final String E3D_SASH_LOWER = E3D.getString(getProperty());
    public static final String E3D_SASH_MIDDLE = E3D.getString(getProperty());
    public static final String E3D_SASH_RIGHT = E3D.getString(getProperty());
    public static final String E3D_SASH_SAME_HEIGHT = E3D.getString(getProperty());
    public static final String E3D_SASH_SAME_WIDTH = E3D.getString(getProperty());
    public static final String E3D_SASH_UPPER = E3D.getString(getProperty());
    public static final String E3D_SAVE = E3D.getString(getProperty());
    public static final String E3D_SAVE_ALL = E3D.getString(getProperty());
    public static final String E3D_SAVE_AS = E3D.getString(getProperty());
    public static final String E3D_SAVE_DAT_FILE_AS = E3D.getString(getProperty());
    public static final String E3D_SAVE_PROJECT = E3D.getString(getProperty());
    public static final String E3D_SCALE = E3D.getString(getProperty());
    public static final String E3D_SCALE_INITIAL = E3D.getString(getProperty());
    public static final String E3D_SCALE_SELECTION = E3D.getString(getProperty());
    public static final String E3D_SCALE_SNAP = E3D.getString(getProperty());
    public static final String E3D_SCALE_X = E3D.getString(getProperty());
    public static final String E3D_SCALE_Y = E3D.getString(getProperty());
    public static final String E3D_SEARCH = E3D.getString(getProperty());
    public static final String E3D_SEARCH_PRIMITIVES = E3D.getString(getProperty());
    public static final String E3D_SELECT = E3D.getString(getProperty());
    public static final String E3D_SELECTION = E3D.getString(getProperty());
    public static final String E3D_SELECT_LDCONFIG = E3D.getString(getProperty());
    public static final String E3D_SELECT_VERTEX = E3D.getString(getProperty());
    public static final String E3D_SET_ACCURACY = E3D.getString(getProperty());
    public static final String E3D_SET_ICON_SIZE = E3D.getString(getProperty());
    public static final String E3D_SET_XYZ = E3D.getString(getProperty());
    public static final String E3D_SHOW_ALL = E3D.getString(getProperty());
    public static final String E3D_SHOW_ERROR_LOGS = E3D.getString(getProperty());
    public static final String E3D_SLANTING_MATRIX_PROJECTOR = E3D.getString(getProperty());
    public static final String E3D_SLICER_PRO = E3D.getString(getProperty());
    public static final String E3D_SMOOTH = E3D.getString(getProperty());
    public static final String E3D_SNAPPING = E3D.getString(getProperty());
    public static final String E3D_SNAPSHOT = E3D.getString(getProperty());
    public static final String E3D_SNAP_TO_GRID = E3D.getString(getProperty());
    public static final String E3D_SPLIT = E3D.getString(getProperty());
    public static final String E3D_SPLIT_EDGES = E3D.getString(getProperty());
    public static final String E3D_SPLIT_HORIZONTALLY = E3D.getString(getProperty());
    public static final String E3D_SPLIT_N_TIMES = E3D.getString(getProperty());
    public static final String E3D_SPLIT_QUAD = E3D.getString(getProperty());
    public static final String E3D_SPLIT_VERTICALLY = E3D.getString(getProperty());
    public static final String E3D_STL_FILE = E3D.getString(getProperty());
    public static final String E3D_STOP_SELECTION_AT_EDGES = E3D.getString(getProperty());
    public static final String E3D_STUD = E3D.getString(getProperty());
    public static final String E3D_SUBDIVIDE_CATMULL_CLARK = E3D.getString(getProperty());
    public static final String E3D_SUBDIVIDE_LOOP = E3D.getString(getProperty());
    public static final String E3D_SUBDIVIDE_NO_SELECTION = E3D.getString(getProperty());
    public static final String E3D_SUBDIVIDE_WARNING_CATMULL_CLARK = E3D.getString(getProperty());
    public static final String E3D_SUBDIVIDE_WARNING_LOOP = E3D.getString(getProperty());
    public static final String E3D_SUBFILE_FROM_SELECTION = E3D.getString(getProperty());
    public static final String E3D_SUBFILE_FROM_SELECTION_QUESTION = E3D.getString(getProperty());
    public static final String E3D_SUBFILE_FROM_SELECTION_QUESTION_CUT = E3D.getString(getProperty());
    public static final String E3D_SUBFILE_TO_MANIPULATOR = E3D.getString(getProperty());
    public static final String E3D_SWAP_WINDING = E3D.getString(getProperty());
    public static final String E3D_SWAP_XY = E3D.getString(getProperty());
    public static final String E3D_SWAP_XZ = E3D.getString(getProperty());
    public static final String E3D_SWAP_YZ = E3D.getString(getProperty());
    public static final String E3D_SYM_SPLITTER = E3D.getString(getProperty());
    public static final String E3D_SYNC = E3D.getString(getProperty());
    public static final String E3D_SYNC_3D_EDITOR = E3D.getString(getProperty());
    public static final String E3D_SYNC_FOLDERS = E3D.getString(getProperty());
    public static final String E3D_SYNC_MANIPULATOR = E3D.getString(getProperty());
    public static final String E3D_SYNC_TRANSLATION = E3D.getString(getProperty());
    public static final String E3D_SYNC_ZOOM = E3D.getString(getProperty());
    public static final String E3D_THRESH_FOR_ADDING_ELEMENTS_2D = E3D.getString(getProperty());
    public static final String E3D_THRESH_FOR_ADDING_ELEMENTS_3D = E3D.getString(getProperty());
    public static final String E3D_THRESH_IN_DEG = E3D.getString(getProperty());
    public static final String E3D_THRESH_IN_LDU = E3D.getString(getProperty());
    public static final String E3D_TOGGLE_BFC = E3D.getString(getProperty());
    public static final String E3D_TOGGLE_TRANSPARENT = E3D.getString(getProperty());
    public static final String E3D_TOOLS = E3D.getString(getProperty());
    public static final String E3D_TOOLS_OPTIONS = E3D.getString(getProperty());
    public static final String E3D_TOUCHING = E3D.getString(getProperty());
    public static final String E3D_TRANSLATE_SELECTION = E3D.getString(getProperty());
    public static final String E3D_TRIANGLES = E3D.getString(getProperty());
    public static final String E3D_TXT_2_DAT = E3D.getString(getProperty());
    public static final String E3D_T_JUNCTION = E3D.getString(getProperty());
    public static final String E3D_T_JUNCTION_COUNT = E3D.getString(getProperty());
    public static final String E3D_UNDO = E3D.getString(getProperty());
    public static final String E3D_UNGROUP = E3D.getString(getProperty());
    public static final String E3D_UNIFICATOR = E3D.getString(getProperty());
    public static final String E3D_UNSAVED_FILES = E3D.getString(getProperty());
    public static final String E3D_USER_CONFIG_FAIL_LOAD = E3D.getString(getProperty());
    public static final String E3D_USER_CONFIG_FAIL_SAVE = E3D.getString(getProperty());
    public static final String E3D_USER_CONFIG_FILE = E3D.getString(getProperty());
    public static final String E3D_USER_CONFIG_LOAD = E3D.getString(getProperty());
    public static final String E3D_USER_CONFIG_SAVE = E3D.getString(getProperty());
    public static final String E3D_USER_CONFIG_SELECT_LOAD = E3D.getString(getProperty());
    public static final String E3D_USER_CONFIG_SELECT_SAVE = E3D.getString(getProperty());
    public static final String E3D_USER_CONFIG_SUCCESS = E3D.getString(getProperty());
    public static final String E3D_VERTEX_DATA = E3D.getString(getProperty());
    public static final String E3D_VERTICES = E3D.getString(getProperty());
    public static final String E3D_VIEWING_ANGLES = E3D.getString(getProperty());
    public static final String E3D_VIEW_ACTIONS = E3D.getString(getProperty());
    public static final String E3D_VULKAN_ENGINE = E3D.getString(getProperty());
    public static final String E3D_WAIT_FOR_UPDATE = E3D.getString(getProperty());
    public static final String E3D_WHAT_IS_HIDDEN = E3D.getString(getProperty());
    public static final String E3D_WITH_ACCURACY = E3D.getString(getProperty());
    public static final String E3D_WITH_ADJACENCY = E3D.getString(getProperty());
    public static final String E3D_WITH_SAME_COLOUR = E3D.getString(getProperty());
    public static final String E3D_WITH_SAME_ORIENTATION = E3D.getString(getProperty());
    public static final String E3D_WITH_SAME_TYPE = E3D.getString(getProperty());
    public static final String E3D_WITH_WHOLE_SUBFILE_SELECTION = E3D.getString(getProperty());
    public static final String E3D_YTRUDER = E3D.getString(getProperty());
    public static final String EDGER_0_TO_180 = EDGER.getString(getProperty());
    public static final String EDGER_0_TO_90 = EDGER.getString(getProperty());
    public static final String EDGER_CONDITION_1 = EDGER.getString(getProperty());
    public static final String EDGER_CONDITION_2 = EDGER.getString(getProperty());
    public static final String EDGER_CONDITION_3 = EDGER.getString(getProperty());
    public static final String EDGER_CONDITION_4 = EDGER.getString(getProperty());
    public static final String EDGER_CONDLINE_MAX_ANGLE = EDGER.getString(getProperty());
    public static final String EDGER_CONDLINE_ON_QUAD_OFF = EDGER.getString(getProperty());
    public static final String EDGER_CONDLINE_ON_QUAD_ON = EDGER.getString(getProperty());
    public static final String EDGER_EDGE_MAX_ANGLE = EDGER.getString(getProperty());
    public static final String EDGER_EXCLUDE_UNMATCHED = EDGER.getString(getProperty());
    public static final String EDGER_FLAT_MAX_ANGLE = EDGER.getString(getProperty());
    public static final String EDGER_INCLUDE_UNMATCHED = EDGER.getString(getProperty());
    public static final String EDGER_PRECISION = EDGER.getString(getProperty());
    public static final String EDGER_RANGE = EDGER.getString(getProperty());
    public static final String EDGER_SCOPE_FILE = EDGER.getString(getProperty());
    public static final String EDGER_SCOPE_FILE_SUBFILES = EDGER.getString(getProperty());
    public static final String EDGER_SCOPE_SELECTION = EDGER.getString(getProperty());
    public static final String EDGER_TITLE = EDGER.getString(getProperty());
    public static final String EDGER_UNMATCHED_ONLY = EDGER.getString(getProperty());
    public static final String EDGER_VERBOSE = EDGER.getString(getProperty());
    public static final String EDGER_VERBOSE_MSG = EDGER.getString(getProperty());
    public static final String EDITORTEXT_COLOUR_1 = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_COLOUR_2 = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_COMMENT = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_COMPILE = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_COMPILE_CSG = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_DATA_ERROR_EXPORT = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_DATA_ERROR_IMPORT = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_DATA_EXPORT = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_DATA_IMPORT = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_DATA_NO_SELECTION = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_DRAW_SELECTION = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_DRAW_UNTIL_SELECTION = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_DUPLICATE = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_DUPLICATES = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_ERROR = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_ERRORS = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_FIND_REPLACE = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_HIDE = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_INLINE_1 = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_INLINE_2 = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_INLINE_3 = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_MERGE_QUAD = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_NEW_FILE = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_OTHER = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_OTHERS = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_READ_ONLY = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_REMOVE_DUPLICATES = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_ROUND = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_SHOW = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_SHOW_HIDE_ERROR_TAB = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_SHOW_SELECTION_IN_3D = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_SORT = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_SPLIT_QUAD = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_SYNC_EDIT = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_SYNC_EDIT_BUTTON = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_SYNC_EDIT_DEACTIVATED = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_TEXMAP = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_UNRECTIFY = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_WARNING = EDITORTEXT.getString(getProperty());
    public static final String EDITORTEXT_WARNINGS = EDITORTEXT.getString(getProperty());
    public static final String ERRORFIXER_MOVED_TO = ERRORFIXER.getString(getProperty());
    public static final String ERRORFIXER_MOVED_TO_HINT = ERRORFIXER.getString(getProperty());
    public static final String HINTFIXER_TITLE = HINTFIXER.getString(getProperty());
    public static final String INFOGRAPHIC_HELP_BUTTON_TITLE = INFOGRAPHIC.getString(getProperty());
    public static final String INFOGRAPHIC_HELP_ERROR = INFOGRAPHIC.getString(getProperty());
    public static final String INFOGRAPHIC_HELP_PDF_FORMAT = INFOGRAPHIC.getString(getProperty());
    public static final String INFOGRAPHIC_HELP_SAVE_AS_PDF = INFOGRAPHIC.getString(getProperty());
    public static final String INFOGRAPHIC_HELP_TOOLTIP = INFOGRAPHIC.getString(getProperty());
    public static final String INTERSECTOR_COLOUR_MODS = INTERSECTOR.getString(getProperty());
    public static final String INTERSECTOR_DESCRIPTION = INTERSECTOR.getString(getProperty());
    public static final String INTERSECTOR_HIDE_OTHER = INTERSECTOR.getString(getProperty());
    public static final String INTERSECTOR_NO_MODS = INTERSECTOR.getString(getProperty());
    public static final String INTERSECTOR_SCOPE_FILE = INTERSECTOR.getString(getProperty());
    public static final String INTERSECTOR_SCOPE_SELECTION = INTERSECTOR.getString(getProperty());
    public static final String INTERSECTOR_TITLE = INTERSECTOR.getString(getProperty());
    public static final String INTERSECTOR_VERBOSE = INTERSECTOR.getString(getProperty());
    public static final String INTERSECTOR_VERBOSE_MSG = INTERSECTOR.getString(getProperty());
    public static final String ISECALC_HINT = ISECALC.getString(getProperty());
    public static final String ISECALC_SCOPE_FILE = ISECALC.getString(getProperty());
    public static final String ISECALC_SCOPE_SELECTION = ISECALC.getString(getProperty());
    public static final String ISECALC_TITLE = ISECALC.getString(getProperty());
    public static final String ISECALC_VERBOSE = ISECALC.getString(getProperty());
    public static final String ISECALC_VERBOSE_MSG = ISECALC.getString(getProperty());
    public static final String KEYBOARD_ADD_COMMENT = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_ADD_CONDLINE = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_ADD_DISTANCE = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_ADD_LINE = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_ADD_PROTRACTOR = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_ADD_QUAD = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_ADD_TRIANGLE = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_ADD_VERTEX = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_ALT = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_AXIS_X = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_AXIS_XY = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_AXIS_XYZ = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_AXIS_XZ = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_AXIS_Y = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_AXIS_YZ = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_AXIS_Z = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_BACKSPACE = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_CLOSE_VIEW = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_COMMAND = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_CONDLINE_TO_LINE = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_COPY = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_CTRL = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_CUSTOMISE_SHORTKEYS = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_CUT = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_DEL = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_DELETE = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_DESCRIPTION = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_DOUBLE_CLICK = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_EDITOR_3D = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_EDITOR_TEXT = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_ESC_1 = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_ESC_2 = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_FIND_REPLACE = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_FLIP_ROTATE = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_INLINE = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_INSERT_HISTORY = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_INSERT_KEYWORD = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_INSERT_REFERENCE = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_INVERT_WHEEL_ZOOM_DIRECTION = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_LINE_TO_CONDLINE = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_LMB = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_MERGE_TO_AVG = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_MERGE_TO_LAST = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_MERGE_TO_NEAREST_VERTEX = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_MMB = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_MODE_COMBINED = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_MODE_MOVE = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_MODE_ROTATE = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_MODE_SCALE = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_MODE_SELECT = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_MOUSE_BUTTON_LAYOUT_A = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_MOUSE_BUTTON_LAYOUT_B = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_MOUSE_BUTTON_LAYOUT_TITLE = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_MOVE_ADJACENT_DATA = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_MOVE_LINE_DOWN = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_MOVE_LINE_UP = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_MOVE_TO_AVG = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_OBJ_FACE = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_OBJ_LINE = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_OBJ_PRIMITIVE = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_OBJ_VERTEX = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_PASTE = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_PERSPECTIVE_BACK = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_PERSPECTIVE_BOTTOM = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_PERSPECTIVE_FRONT = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_PERSPECTIVE_LEFT = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_PERSPECTIVE_RIGHT = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_PERSPECTIVE_TOP = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_PERSPECTIVE_TWO_THIRDS = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_PRESS_A_KEY = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_QUICK_FIX = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_REDO = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_RENDERMODE_CONDLINE_MODE = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_RENDERMODE_COPLANARITY_HEATMAP = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_RENDERMODE_GREEN_FRONTFACES_RED_BACKFACES = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_RENDERMODE_LDRAW_STANDARD = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_RENDERMODE_NO_BACKFACE_CULLING = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_RENDERMODE_RANDOM_COLOURS = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_RENDERMODE_REAL_BACKFACE_CULLING = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_RENDERMODE_RED_BACKFACES = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_RENDERMODE_WIREFRAME = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_REPLACE_VERTEX = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_RESET_MANIPULATOR = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_RESET_VIEW = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_RMB = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_ROUND = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_SAVE = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_SELECT_ALL = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_SELECT_ALL_WITH_SAME_COLOURS = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_SELECT_CONNECTED = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_SELECT_NONE = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_SELECT_OPTION_WITH_SAME_COLOURS = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_SELECT_TOUCHING = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_SHIFT = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_SHORTKEY = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_SHOW_AXIS_LABELS = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_SHOW_GRID = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_SHOW_RULER = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_SIZE_DECREASE = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_SIZE_INCREASE = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_SPLIT = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_SWAP_WINDING = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_TOGGLE_INSERT_AT_CURSOR = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_UNDO = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_ZOOM_IN = KEYBOARD.getString(getProperty());
    public static final String KEYBOARD_ZOOM_OUT = KEYBOARD.getString(getProperty());
    public static final String LINES_HINT = LINES.getString(getProperty());
    public static final String LINES_SCOPE_SELECTION = LINES.getString(getProperty());
    public static final String LINES_TITLE = LINES.getString(getProperty());
    public static final String LINES_VERBOSE = LINES.getString(getProperty());
    public static final String LINES_VERBOSE_MSG = LINES.getString(getProperty());
    public static final String MESHREDUCE_DESTROY_COLOURS = MESHREDUCE.getString(getProperty());
    public static final String MESHREDUCE_KEEP_COLOURS = MESHREDUCE.getString(getProperty());
    public static final String MESHREDUCE_MODE = MESHREDUCE.getString(getProperty());
    public static final String MESHREDUCE_TITLE = MESHREDUCE.getString(getProperty());
    public static final String META_AUTHOR = META.getString(getProperty());
    public static final String META_BACK_FACE_CULLING = META.getString(getProperty());
    public static final String META_CHOOSE_PNG = META.getString(getProperty());
    public static final String META_COLOUR = META.getString(getProperty());
    public static final String META_COLOUR_HINT = META.getString(getProperty());
    public static final String META_COMMAND_LINE = META.getString(getProperty());
    public static final String META_COMMENT = META.getString(getProperty());
    public static final String META_CONST_HINT = META.getString(getProperty());
    public static final String META_CONST_NAME = META.getString(getProperty());
    public static final String META_CONST_VALUE = META.getString(getProperty());
    public static final String META_CSG_COLLAPSE_1 = META.getString(getProperty());
    public static final String META_CSG_COLLAPSE_2 = META.getString(getProperty());
    public static final String META_CSG_COMPILE = META.getString(getProperty());
    public static final String META_CSG_DONT_OPTIMIZE = META.getString(getProperty());
    public static final String META_CSG_EPSILON_1 = META.getString(getProperty());
    public static final String META_CSG_EPSILON_2 = META.getString(getProperty());
    public static final String META_CSG_EPSILON_3 = META.getString(getProperty());
    public static final String META_CSG_EPSILON_4 = META.getString(getProperty());
    public static final String META_CSG_EXTRUDE_1_A = META.getString(getProperty());
    public static final String META_CSG_EXTRUDE_1_B = META.getString(getProperty());
    public static final String META_CSG_EXTRUDE_2_A = META.getString(getProperty());
    public static final String META_CSG_EXTRUDE_2_B = META.getString(getProperty());
    public static final String META_CSG_EXTRUDE_3_A = META.getString(getProperty());
    public static final String META_CSG_EXTRUDE_3_B = META.getString(getProperty());
    public static final String META_CSG_EXTRUDE_4_A = META.getString(getProperty());
    public static final String META_CSG_EXTRUDE_4_B = META.getString(getProperty());
    public static final String META_CSG_EXTRUDE_5_A = META.getString(getProperty());
    public static final String META_CSG_EXTRUDE_5_B = META.getString(getProperty());
    public static final String META_CSG_EXTRUDE_6_A = META.getString(getProperty());
    public static final String META_CSG_EXTRUDE_6_B = META.getString(getProperty());
    public static final String META_CSG_EXTRUDE_7_A = META.getString(getProperty());
    public static final String META_CSG_EXTRUDE_7_B = META.getString(getProperty());
    public static final String META_CSG_JUNCTION_EPSILON_1 = META.getString(getProperty());
    public static final String META_CSG_JUNCTION_EPSILON_2 = META.getString(getProperty());
    public static final String META_CSG_SOURCE_1 = META.getString(getProperty());
    public static final String META_CSG_SOURCE_2 = META.getString(getProperty());
    public static final String META_CSG_SOURCE_3 = META.getString(getProperty());
    public static final String META_CSG_TARGET_1 = META.getString(getProperty());
    public static final String META_CSG_UNIQUE = META.getString(getProperty());
    public static final String META_CSG_UNIQUE_HINT = META.getString(getProperty());
    public static final String META_CYLINDER_BOTTOM_CENTER = META.getString(getProperty());
    public static final String META_CYLINDER_TOP_CENTER = META.getString(getProperty());
    public static final String META_DECIMAL_MARK = META.getString(getProperty());
    public static final String META_DESCRIPTION = META.getString(getProperty());
    public static final String META_FILENAME = META.getString(getProperty());
    public static final String META_HELP = META.getString(getProperty());
    public static final String META_HISTORY_1 = META.getString(getProperty());
    public static final String META_HISTORY_2 = META.getString(getProperty());
    public static final String META_HISTORY_3 = META.getString(getProperty());
    public static final String META_HISTORY_4 = META.getString(getProperty());
    public static final String META_KEYWORDS_1 = META.getString(getProperty());
    public static final String META_KEYWORDS_2 = META.getString(getProperty());
    public static final String META_LDRAW_HEADER = META.getString(getProperty());
    public static final String META_LPE = META.getString(getProperty());
    public static final String META_M00 = META.getString(getProperty());
    public static final String META_M01 = META.getString(getProperty());
    public static final String META_M02 = META.getString(getProperty());
    public static final String META_M10 = META.getString(getProperty());
    public static final String META_M11 = META.getString(getProperty());
    public static final String META_M12 = META.getString(getProperty());
    public static final String META_M20 = META.getString(getProperty());
    public static final String META_M21 = META.getString(getProperty());
    public static final String META_M22 = META.getString(getProperty());
    public static final String META_NEW_LINE_NOTE = META.getString(getProperty());
    public static final String META_QUALITY = META.getString(getProperty());
    public static final String META_ROTATION_X = META.getString(getProperty());
    public static final String META_ROTATION_Y = META.getString(getProperty());
    public static final String META_ROTATION_Z = META.getString(getProperty());
    public static final String META_SCALE_X = META.getString(getProperty());
    public static final String META_SCALE_Y = META.getString(getProperty());
    public static final String META_TEXTURE_ANGLE_1 = META.getString(getProperty());
    public static final String META_TEXTURE_ANGLE_2 = META.getString(getProperty());
    public static final String META_TEXTURE_BOTTOM_CENTER = META.getString(getProperty());
    public static final String META_TEXTURE_CENTER = META.getString(getProperty());
    public static final String META_TEXTURE_GEOM_1 = META.getString(getProperty());
    public static final String META_TEXTURE_GEOM_2 = META.getString(getProperty());
    public static final String META_TEXTURE_MAPPING = META.getString(getProperty());
    public static final String META_TEXTURE_PNG = META.getString(getProperty());
    public static final String META_TEXTURE_SPHERE_CENTER = META.getString(getProperty());
    public static final String META_TEXTURE_TOP_CENTER = META.getString(getProperty());
    public static final String META_TEXTURE_X1 = META.getString(getProperty());
    public static final String META_TEXTURE_X2 = META.getString(getProperty());
    public static final String META_TEXTURE_X3 = META.getString(getProperty());
    public static final String META_TEXTURE_Y1 = META.getString(getProperty());
    public static final String META_TEXTURE_Y2 = META.getString(getProperty());
    public static final String META_TEXTURE_Y3 = META.getString(getProperty());
    public static final String META_TEXTURE_Z1 = META.getString(getProperty());
    public static final String META_TEXTURE_Z2 = META.getString(getProperty());
    public static final String META_TEXTURE_Z3 = META.getString(getProperty());
    public static final String META_TODO = META.getString(getProperty());
    public static final String META_TRANS_MATRIX = META.getString(getProperty());
    public static final String META_USERNAME = META.getString(getProperty());
    public static final String META_VERTEX_X = META.getString(getProperty());
    public static final String META_VERTEX_Y = META.getString(getProperty());
    public static final String META_VERTEX_Z = META.getString(getProperty());
    public static final String META_YEAR_RELEASE = META.getString(getProperty());
    public static final String OPTIONS_ADVANCED_USAGE = OPTIONS.getString(getProperty());
    public static final String OPTIONS_ALLOW_INVALID_SHAPES = OPTIONS.getString(getProperty());
    public static final String OPTIONS_AUTHORING_FOLDER = OPTIONS.getString(getProperty());
    public static final String OPTIONS_AUTHORING_WHERE = OPTIONS.getString(getProperty());
    public static final String OPTIONS_BROWSE = OPTIONS.getString(getProperty());
    public static final String OPTIONS_CHOOSE_LOCALE = OPTIONS.getString(getProperty());
    public static final String OPTIONS_COLOUR_NUMBER_INPUT = OPTIONS.getString(getProperty());
    public static final String OPTIONS_COPLANARITY_ERROR = OPTIONS.getString(getProperty());
    public static final String OPTIONS_COPLANARITY_WARNING = OPTIONS.getString(getProperty());
    public static final String OPTIONS_DATA_FILE_SIZE_LIMIT = OPTIONS.getString(getProperty());
    public static final String OPTIONS_DIRECTORY = OPTIONS.getString(getProperty());
    public static final String OPTIONS_KEY_COMBO_IN_USE = OPTIONS.getString(getProperty());
    public static final String OPTIONS_LDRAW_FOLDER = OPTIONS.getString(getProperty());
    public static final String OPTIONS_LDRAW_NAME = OPTIONS.getString(getProperty());
    public static final String OPTIONS_LICENSE = OPTIONS.getString(getProperty());
    public static final String OPTIONS_MAD_1 = OPTIONS.getString(getProperty());
    public static final String OPTIONS_MAD_2 = OPTIONS.getString(getProperty());
    public static final String OPTIONS_MISC_OPTIONS = OPTIONS.getString(getProperty());
    public static final String OPTIONS_REAL_NAME = OPTIONS.getString(getProperty());
    public static final String OPTIONS_SCALE_FACTOR = OPTIONS.getString(getProperty());
    public static final String OPTIONS_TEXT_WINDOW_ARR = OPTIONS.getString(getProperty());
    public static final String OPTIONS_TEXT_WINDOW_LEFT = OPTIONS.getString(getProperty());
    public static final String OPTIONS_TEXT_WINDOW_RIGHT = OPTIONS.getString(getProperty());
    public static final String OPTIONS_TEXT_WINDOW_SEPARATE = OPTIONS.getString(getProperty());
    public static final String OPTIONS_TEXT_WINDOW_SINGLE = OPTIONS.getString(getProperty());
    public static final String OPTIONS_TRANSLATE_BY_CURSOR = OPTIONS.getString(getProperty());
    public static final String OPTIONS_UNOFFICIAL_FOLDER = OPTIONS.getString(getProperty());
    public static final String OPTIONS_UNOFFICIAL_WHERE = OPTIONS.getString(getProperty());
    public static final String PARTREVIEW_ALREADY = PARTREVIEW.getString(getProperty());
    public static final String PARTREVIEW_CHECK = PARTREVIEW.getString(getProperty());
    public static final String PARTREVIEW_ENTER_PART_NAME = PARTREVIEW.getString(getProperty());
    public static final String PARTREVIEW_ERROR = PARTREVIEW.getString(getProperty());
    public static final String PARTREVIEW_INFO = PARTREVIEW.getString(getProperty());
    public static final String PARTREVIEW_TITLE = PARTREVIEW.getString(getProperty());
    public static final String PARTREVIEW_VERBOSE = PARTREVIEW.getString(getProperty());
    public static final String PARTREVIEW_VERBOSE_MSG = PARTREVIEW.getString(getProperty());
    public static final String PARTS_HI_RES_PRIMITIVES = PARTS.getString(getProperty());
    public static final String PARTS_LOW_RES_PRIMITIVES = PARTS.getString(getProperty());
    public static final String PARTS_PARTS = PARTS.getString(getProperty());
    public static final String PARTS_PRIMITIVES = PARTS.getString(getProperty());
    public static final String PARTS_SUBPARTS = PARTS.getString(getProperty());
    public static final String PATHTRUDER_COLOUR_CODES = PATHTRUDER.getString(getProperty());
    public static final String PATHTRUDER_CONTROL_CURVE = PATHTRUDER.getString(getProperty());
    public static final String PATHTRUDER_CONTROL_CURVE_CENTER = PATHTRUDER.getString(getProperty());
    public static final String PATHTRUDER_INVERT_SHAPE = PATHTRUDER.getString(getProperty());
    public static final String PATHTRUDER_INVERT_SHAPE_1 = PATHTRUDER.getString(getProperty());
    public static final String PATHTRUDER_INVERT_SHAPE_2 = PATHTRUDER.getString(getProperty());
    public static final String PATHTRUDER_LINE_THRESH = PATHTRUDER.getString(getProperty());
    public static final String PATHTRUDER_MAX_PATH_LENGTH = PATHTRUDER.getString(getProperty());
    public static final String PATHTRUDER_NUM_TRANSITIONS = PATHTRUDER.getString(getProperty());
    public static final String PATHTRUDER_ROT_ANGLE = PATHTRUDER.getString(getProperty());
    public static final String PATHTRUDER_SHAPE_COMP = PATHTRUDER.getString(getProperty());
    public static final String PATHTRUDER_SHAPE_COMP_1 = PATHTRUDER.getString(getProperty());
    public static final String PATHTRUDER_SHAPE_COMP_2 = PATHTRUDER.getString(getProperty());
    public static final String PATHTRUDER_TITLE = PATHTRUDER.getString(getProperty());
    public static final String PATHTRUDER_VERBOSE = PATHTRUDER.getString(getProperty());
    public static final String PATHTRUDER_VERBOSE_MSG = PATHTRUDER.getString(getProperty());
    public static final String PERSPECTIVE_BACK = PERSPECTIVE.getString(getProperty());
    public static final String PERSPECTIVE_BOTTOM = PERSPECTIVE.getString(getProperty());
    public static final String PERSPECTIVE_FRONT = PERSPECTIVE.getString(getProperty());
    public static final String PERSPECTIVE_LEFT = PERSPECTIVE.getString(getProperty());
    public static final String PERSPECTIVE_LOCK = PERSPECTIVE.getString(getProperty());
    public static final String PERSPECTIVE_RIGHT = PERSPECTIVE.getString(getProperty());
    public static final String PERSPECTIVE_TOP = PERSPECTIVE.getString(getProperty());
    public static final String PERSPECTIVE_TWO_THIRDS = PERSPECTIVE.getString(getProperty());
    public static final String PERSPECTIVE_ZOOM = PERSPECTIVE.getString(getProperty());
    public static final String PRIMGEN_CCW = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_CHORD = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_CIRCLE = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_CONE = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_CUSTOM = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_CW = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_CYLINDER = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_DISC = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_DISC_NEGATIVE = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_DIVISIONS = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_EDGES_PER_CRO = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_EIGHT = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_FOURTYEIGHT = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_HALF = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_INSIDE = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_MAJOR = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_MINOR = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_NON_STANDARD = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_OUTSIDE = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_QUARTER = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_RING = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_SAVE_AS = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_SEGMENTS = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_SIXTEEN = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_SIZE = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_STANDARD = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_THREE_QUARTER = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_TITLE = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_TORUS = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_TORUS_TYPE = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_TUBE = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_TYPE = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_WHOLE = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_WIDTH = PRIMGEN.getString(getProperty());
    public static final String PRIMGEN_WINDING = PRIMGEN.getString(getProperty());
    public static final String PROJECT_CREATE_NEW_PROJECT = PROJECT.getString(getProperty());
    public static final String PROJECT_DEFINE_PROJECT_LOCATION = PROJECT.getString(getProperty());
    public static final String PROJECT_NEW_PROJECT = PROJECT.getString(getProperty());
    public static final String PROJECT_OFFICIAL_LIB_READ = PROJECT.getString(getProperty());
    public static final String PROJECT_PROJECT_LOCATION = PROJECT.getString(getProperty());
    public static final String PROJECT_PROJECT_NAME = PROJECT.getString(getProperty());
    public static final String PROJECT_PROJECT_OVERWRITE = PROJECT.getString(getProperty());
    public static final String PROJECT_PROJECT_OVERWRITE_TITLE = PROJECT.getString(getProperty());
    public static final String PROJECT_SAVE_PROJECT = PROJECT.getString(getProperty());
    public static final String PROJECT_SELECT_PROJECT_LOCATION = PROJECT.getString(getProperty());
    public static final String PROJECT_UNOFFICIAL_LIB_READ_WRITE = PROJECT.getString(getProperty());
    public static final String RCONES_ANGLE = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_01 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_02 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_03 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_04 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_05 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_06 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_07 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_08 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_09 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_10 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_11 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_12 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_13 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_14 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_15 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_16 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_17 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_18 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_19 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_20 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_21 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_22 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_23 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_24 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_25 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_26 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_27 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_28 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_29 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_30 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_31 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_32 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_33 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_34 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_35 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_36 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_37 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_38 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_39 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_40 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_41 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_42 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_43 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_44 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_45 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_46 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_47 = RCONES.getString(getProperty());
    public static final String RCONES_ANGLE_48 = RCONES.getString(getProperty());
    public static final String RCONES_CONE = RCONES.getString(getProperty());
    public static final String RCONES_CONE_48 = RCONES.getString(getProperty());
    public static final String RCONES_CREATE_1 = RCONES.getString(getProperty());
    public static final String RCONES_CREATE_2 = RCONES.getString(getProperty());
    public static final String RCONES_HEIGHT = RCONES.getString(getProperty());
    public static final String RCONES_HINT = RCONES.getString(getProperty());
    public static final String RCONES_NO_SOLUTION = RCONES.getString(getProperty());
    public static final String RCONES_PRIMS_1 = RCONES.getString(getProperty());
    public static final String RCONES_PRIMS_2 = RCONES.getString(getProperty());
    public static final String RCONES_RADIUS_1 = RCONES.getString(getProperty());
    public static final String RCONES_RADIUS_2 = RCONES.getString(getProperty());
    public static final String RCONES_RING = RCONES.getString(getProperty());
    public static final String RCONES_RING_48 = RCONES.getString(getProperty());
    public static final String RCONES_SHAPE = RCONES.getString(getProperty());
    public static final String RCONES_TASK = RCONES.getString(getProperty());
    public static final String RCONES_TITLE = RCONES.getString(getProperty());
    public static final String RECTIFIER_COLOUR_1 = RECTIFIER.getString(getProperty());
    public static final String RECTIFIER_COLOUR_2 = RECTIFIER.getString(getProperty());
    public static final String RECTIFIER_MAX_ANGLE = RECTIFIER.getString(getProperty());
    public static final String RECTIFIER_RECT_1 = RECTIFIER.getString(getProperty());
    public static final String RECTIFIER_RECT_2 = RECTIFIER.getString(getProperty());
    public static final String RECTIFIER_RECT_3 = RECTIFIER.getString(getProperty());
    public static final String RECTIFIER_RECT_4 = RECTIFIER.getString(getProperty());
    public static final String RECTIFIER_SCOPE_FILE = RECTIFIER.getString(getProperty());
    public static final String RECTIFIER_SCOPE_SELECTION = RECTIFIER.getString(getProperty());
    public static final String RECTIFIER_TITLE = RECTIFIER.getString(getProperty());
    public static final String RECTIFIER_TRI_QUADS_1 = RECTIFIER.getString(getProperty());
    public static final String RECTIFIER_TRI_QUADS_2 = RECTIFIER.getString(getProperty());
    public static final String RECTIFIER_VERBOSE = RECTIFIER.getString(getProperty());
    public static final String RECTIFIER_VERBOSE_MSG = RECTIFIER.getString(getProperty());
    public static final String ROTATE_PIVOT = ROTATE.getString(getProperty());
    public static final String ROTATE_PIVOT_CLIPBOARD = ROTATE.getString(getProperty());
    public static final String ROTATE_PIVOT_INITIAL_A = ROTATE.getString(getProperty());
    public static final String ROTATE_PIVOT_INITIAL_B = ROTATE.getString(getProperty());
    public static final String ROTATE_PIVOT_INITIAL_C = ROTATE.getString(getProperty());
    public static final String ROTATE_PIVOT_MANIPULATOR = ROTATE.getString(getProperty());
    public static final String ROTATE_TITLE = ROTATE.getString(getProperty());
    public static final String ROTATE_X = ROTATE.getString(getProperty());
    public static final String ROTATE_Y = ROTATE.getString(getProperty());
    public static final String ROTATE_Z = ROTATE.getString(getProperty());
    public static final String ROUND_COORD_PRECISION = ROUND.getString(getProperty());
    public static final String ROUND_IN_DEC_PLACES = ROUND.getString(getProperty());
    public static final String ROUND_MATRIX_PRECISION = ROUND.getString(getProperty());
    public static final String ROUND_TITLE = ROUND.getString(getProperty());
    public static final String ROUND_X = ROUND.getString(getProperty());
    public static final String ROUND_Y = ROUND.getString(getProperty());
    public static final String ROUND_Z = ROUND.getString(getProperty());
    public static final String SCALE_PIVOT = SCALE.getString(getProperty());
    public static final String SCALE_PIVOT_CLIPBOARD = SCALE.getString(getProperty());
    public static final String SCALE_PIVOT_INITIAL_A = SCALE.getString(getProperty());
    public static final String SCALE_PIVOT_INITIAL_B = SCALE.getString(getProperty());
    public static final String SCALE_PIVOT_INITIAL_C = SCALE.getString(getProperty());
    public static final String SCALE_PIVOT_MANIPULATOR = SCALE.getString(getProperty());
    public static final String SCALE_TITLE = SCALE.getString(getProperty());
    public static final String SCALE_X = SCALE.getString(getProperty());
    public static final String SCALE_Y = SCALE.getString(getProperty());
    public static final String SCALE_Z = SCALE.getString(getProperty());
    public static final String SEARCH_ALL = SEARCH.getString(getProperty());
    public static final String SEARCH_BACKWARD = SEARCH.getString(getProperty());
    public static final String SEARCH_CASE_SENSITIVE = SEARCH.getString(getProperty());
    public static final String SEARCH_CLOSE = SEARCH.getString(getProperty());
    public static final String SEARCH_DIRECTION = SEARCH.getString(getProperty());
    public static final String SEARCH_FIND = SEARCH.getString(getProperty());
    public static final String SEARCH_FIND_2 = SEARCH.getString(getProperty());
    public static final String SEARCH_FORWARD = SEARCH.getString(getProperty());
    public static final String SEARCH_INCREMENTAL = SEARCH.getString(getProperty());
    public static final String SEARCH_OPTIONS = SEARCH.getString(getProperty());
    public static final String SEARCH_REPLACE = SEARCH.getString(getProperty());
    public static final String SEARCH_REPLACE_ALL = SEARCH.getString(getProperty());
    public static final String SEARCH_REPLACE_FIND = SEARCH.getString(getProperty());
    public static final String SEARCH_REPLACE_WITH = SEARCH.getString(getProperty());
    public static final String SEARCH_SCOPE = SEARCH.getString(getProperty());
    public static final String SEARCH_SELECTED_LINES = SEARCH.getString(getProperty());
    public static final String SLANT_COPY_TO_CLIPBOARD = SLANT.getString(getProperty());
    public static final String SLANT_HOW_TO = SLANT.getString(getProperty());
    public static final String SLANT_MATRIX_FOR_XY = SLANT.getString(getProperty());
    public static final String SLANT_MATRIX_FOR_XYZ = SLANT.getString(getProperty());
    public static final String SLANT_MATRIX_FOR_XZ = SLANT.getString(getProperty());
    public static final String SLANT_MATRIX_FOR_YZ = SLANT.getString(getProperty());
    public static final String SLANT_MATRIX_READY = SLANT.getString(getProperty());
    public static final String SLANT_NO_SELECTION_NOTHING = SLANT.getString(getProperty());
    public static final String SLANT_NO_SELECTION_RESULT = SLANT.getString(getProperty());
    public static final String SLANT_NO_SELECTION_THREE_AXES = SLANT.getString(getProperty());
    public static final String SLANT_NO_SELECTION_TWO_AXES = SLANT.getString(getProperty());
    public static final String SLANT_RESET_SUBFILE_ORIENTATION = SLANT.getString(getProperty());
    public static final String SLANT_SET_ORIGIN = SLANT.getString(getProperty());
    public static final String SLANT_TITLE = SLANT.getString(getProperty());
    public static final String SLANT_VERBOSE = SLANT.getString(getProperty());
    public static final String SLANT_VERBOSE_MSG = SLANT.getString(getProperty());
    public static final String SLICERPRO_HINT = SLICERPRO.getString(getProperty());
    public static final String SLICERPRO_TITLE = SLICERPRO.getString(getProperty());
    public static final String SLICERPRO_VERBOSE = SLICERPRO.getString(getProperty());
    public static final String SLICERPRO_VERBOSE_MSG = SLICERPRO.getString(getProperty());
    public static final String SMOOTH_FACTOR = SMOOTH.getString(getProperty());
    public static final String SMOOTH_ITERATIONS = SMOOTH.getString(getProperty());
    public static final String SMOOTH_REALTIME_PREVIEW = SMOOTH.getString(getProperty());
    public static final String SMOOTH_TITLE = SMOOTH.getString(getProperty());
    public static final String SORT_BY_COLOUR_ASC = SORT.getString(getProperty());
    public static final String SORT_BY_COLOUR_DESC = SORT.getString(getProperty());
    public static final String SORT_BY_TYPE_ASC = SORT.getString(getProperty());
    public static final String SORT_BY_TYPE_COLOUR_ASC = SORT.getString(getProperty());
    public static final String SORT_BY_TYPE_COLOUR_DESC = SORT.getString(getProperty());
    public static final String SORT_BY_TYPE_DESC = SORT.getString(getProperty());
    public static final String SORT_IGNORE_STRUCTURE = SORT.getString(getProperty());
    public static final String SORT_SCOPE_FILE = SORT.getString(getProperty());
    public static final String SORT_SCOPE_SELECTION = SORT.getString(getProperty());
    public static final String SORT_TITLE = SORT.getString(getProperty());
    public static final String SPINNER_MORE_DIGITS_POSSIBLE = SPINNER.getString(getProperty());
    public static final String SPINNER_REAL_VALUE_DIFFERS = SPINNER.getString(getProperty());
    public static final String SPINNER_VALID_NUMBER_PLEASE = SPINNER.getString(getProperty());
    public static final String SPINNER_VALUE_BETWEEN_MIN_MAX = SPINNER.getString(getProperty());
    public static final String SPLASH_CHECK_PLUG_IN = SPLASH.getString(getProperty());
    public static final String SPLASH_ERROR = SPLASH.getString(getProperty());
    public static final String SPLASH_INVALID_OPEN_GL_VERSION = SPLASH.getString(getProperty());
    public static final String SPLASH_LOAD_WORKBENCH = SPLASH.getString(getProperty());
    public static final String SPLASH_NO_MKDIR_NO_READ = SPLASH.getString(getProperty());
    public static final String SPLASH_NO_READ = SPLASH.getString(getProperty());
    public static final String SPLASH_NO_WRITE = SPLASH.getString(getProperty());
    public static final String SPLASH_TITLE = SPLASH.getString(getProperty());
    public static final String SYMSPLITTER_COLOURISE = SYMSPLITTER.getString(getProperty());
    public static final String SYMSPLITTER_CUT = SYMSPLITTER.getString(getProperty());
    public static final String SYMSPLITTER_DO_NOT_CUT = SYMSPLITTER.getString(getProperty());
    public static final String SYMSPLITTER_HINT = SYMSPLITTER.getString(getProperty());
    public static final String SYMSPLITTER_NOT_COLOURISE = SYMSPLITTER.getString(getProperty());
    public static final String SYMSPLITTER_NO_VALIDATION = SYMSPLITTER.getString(getProperty());
    public static final String SYMSPLITTER_SCOPE_FILE = SYMSPLITTER.getString(getProperty());
    public static final String SYMSPLITTER_SCOPE_SELECTION = SYMSPLITTER.getString(getProperty());
    public static final String SYMSPLITTER_SELECT_WHAT = SYMSPLITTER.getString(getProperty());
    public static final String SYMSPLITTER_SHOW_ALL = SYMSPLITTER.getString(getProperty());
    public static final String SYMSPLITTER_SHOW_BEHIND = SYMSPLITTER.getString(getProperty());
    public static final String SYMSPLITTER_SHOW_FRONT = SYMSPLITTER.getString(getProperty());
    public static final String SYMSPLITTER_SHOW_MIDDLE = SYMSPLITTER.getString(getProperty());
    public static final String SYMSPLITTER_SPLITTING_PLANE = SYMSPLITTER.getString(getProperty());
    public static final String SYMSPLITTER_TITLE = SYMSPLITTER.getString(getProperty());
    public static final String SYMSPLITTER_VALIDATION = SYMSPLITTER.getString(getProperty());
    public static final String SYMSPLITTER_VERBOSE = SYMSPLITTER.getString(getProperty());
    public static final String SYMSPLITTER_VERBOSE_MSG = SYMSPLITTER.getString(getProperty());
    public static final String SYMSPLITTER_VERTEX_THRESHOLD = SYMSPLITTER.getString(getProperty());
    public static final String SYMSPLITTER_XM = SYMSPLITTER.getString(getProperty());
    public static final String SYMSPLITTER_XP = SYMSPLITTER.getString(getProperty());
    public static final String SYMSPLITTER_YM = SYMSPLITTER.getString(getProperty());
    public static final String SYMSPLITTER_YP = SYMSPLITTER.getString(getProperty());
    public static final String SYMSPLITTER_ZM = SYMSPLITTER.getString(getProperty());
    public static final String SYMSPLITTER_ZP = SYMSPLITTER.getString(getProperty());
    public static final String TJUNCTION_AGGRESSIVE = TJUNCTION.getString(getProperty());
    public static final String TJUNCTION_FIND = TJUNCTION.getString(getProperty());
    public static final String TJUNCTION_MODE = TJUNCTION.getString(getProperty());
    public static final String TJUNCTION_NORMAL = TJUNCTION.getString(getProperty());
    public static final String TJUNCTION_TITLE = TJUNCTION.getString(getProperty());
    public static final String TRANSLATE_TITLE = TRANSLATE.getString(getProperty());
    public static final String TRANSLATE_TO_MANIPULATOR_POSITION = TRANSLATE.getString(getProperty());
    public static final String TRANSLATE_TO_MANIPULATOR_POSITION_INVERTED = TRANSLATE.getString(getProperty());
    public static final String TRANSLATE_X = TRANSLATE.getString(getProperty());
    public static final String TRANSLATE_Y = TRANSLATE.getString(getProperty());
    public static final String TRANSLATE_Z = TRANSLATE.getString(getProperty());
    public static final String TREEITEM_LINE = TREEITEM.getString(getProperty());
    public static final String TXT2DAT_FLATNESS = TXT2DAT.getString(getProperty());
    public static final String TXT2DAT_FONT = TXT2DAT.getString(getProperty());
    public static final String TXT2DAT_FONT_HEIGHT = TXT2DAT.getString(getProperty());
    public static final String TXT2DAT_MARGIN = TXT2DAT.getString(getProperty());
    public static final String TXT2DAT_MODE = TXT2DAT.getString(getProperty());
    public static final String TXT2DAT_ONLY_CHARACTERS = TXT2DAT.getString(getProperty());
    public static final String TXT2DAT_SELECT = TXT2DAT.getString(getProperty());
    public static final String TXT2DAT_SINGLE_BACKGROUND = TXT2DAT.getString(getProperty());
    public static final String TXT2DAT_SINGLE_LETTERS = TXT2DAT.getString(getProperty());
    public static final String TXT2DAT_TEXT = TXT2DAT.getString(getProperty());
    public static final String TXT2DAT_TITLE = TXT2DAT.getString(getProperty());
    public static final String TXT2DAT_TRIANGULATE = TXT2DAT.getString(getProperty());
    public static final String TXT2DAT_VERBOSE = TXT2DAT.getString(getProperty());
    public static final String TXT2DAT_VERBOSE_MSG = TXT2DAT.getString(getProperty());
    public static final String UNIFICATOR_SCOPE_FILE = UNIFICATOR.getString(getProperty());
    public static final String UNIFICATOR_SCOPE_SELECTION = UNIFICATOR.getString(getProperty());
    public static final String UNIFICATOR_SNAP_ON = UNIFICATOR.getString(getProperty());
    public static final String UNIFICATOR_SUBPART_VERTICES = UNIFICATOR.getString(getProperty());
    public static final String UNIFICATOR_TITLE = UNIFICATOR.getString(getProperty());
    public static final String UNIFICATOR_VERBOSE = UNIFICATOR.getString(getProperty());
    public static final String UNIFICATOR_VERBOSE_MSG = UNIFICATOR.getString(getProperty());
    public static final String UNIFICATOR_VERTEX_SNAP = UNIFICATOR.getString(getProperty());
    public static final String UNIFICATOR_VERTEX_UNIFIATION = UNIFICATOR.getString(getProperty());
    public static final String UNIFICATOR_VERTICES = UNIFICATOR.getString(getProperty());
    public static final String UNIFICATOR_VERTICES_SUBPART_VERTICES = UNIFICATOR.getString(getProperty());
    public static final String UNITS_FACTOR_INCH_TO_LDU = UNITS.getString(getProperty());
    public static final String UNITS_FACTOR_INCH_TO_MM = UNITS.getString(getProperty());
    public static final String UNITS_FACTOR_LDU_TO_INCH = UNITS.getString(getProperty());
    public static final String UNITS_FACTOR_LDU_TO_MM = UNITS.getString(getProperty());
    public static final String UNITS_FACTOR_LDU_TO_STUD = UNITS.getString(getProperty());
    public static final String UNITS_FACTOR_MM_TO_INCH = UNITS.getString(getProperty());
    public static final String UNITS_FACTOR_MM_TO_LDU = UNITS.getString(getProperty());
    public static final String UNITS_FACTOR_STUD_TO_LDU = UNITS.getString(getProperty());
    public static final String UNITS_LDU = UNITS.getString(getProperty());
    public static final String UNITS_NAME_LDU = UNITS.getString(getProperty());
    public static final String UNITS_NAME_PRIMARY = UNITS.getString(getProperty());
    public static final String UNITS_NAME_SECONDARY = UNITS.getString(getProperty());
    public static final String UNITS_NAME_TERTIARY = UNITS.getString(getProperty());
    public static final String UNITS_PRIMARY = UNITS.getString(getProperty());
    public static final String UNITS_SECONDARY = UNITS.getString(getProperty());
    public static final String UNITS_TERTIARY = UNITS.getString(getProperty());
    public static final String VERSION_CONTRIBUTORS = VERSION.getString(getProperty());
    public static final String VERSION_DEVELOPMENT_LEAD = VERSION.getString(getProperty());
    public static final String VERSION_STAGE = VERSION.getString(getProperty());
    public static final String VERSION_TESTERS = VERSION.getString(getProperty());
    public static final String VERSION_VERSION = VERSION.getString(getProperty());
    public static final String VM_DETECT_NEW_EDGES = VM.getString(getProperty());
    public static final String VM_EMPTY_SUBFILE = VM.getString(getProperty());
    public static final String VM_FLAT_SCALED_X = VM.getString(getProperty());
    public static final String VM_FLAT_SCALED_Y = VM.getString(getProperty());
    public static final String VM_FLAT_SCALED_Z = VM.getString(getProperty());
    public static final String VM_INTERSECTOR = VM.getString(getProperty());
    public static final String VM_LINES_2_PATTERN = VM.getString(getProperty());
    public static final String VM_PATH_TRUDER = VM.getString(getProperty());
    public static final String VM_RECTIFY = VM.getString(getProperty());
    public static final String VM_SEARCH_INTERSECTION = VM.getString(getProperty());
    public static final String VM_SELECTING = VM.getString(getProperty());
    public static final String VM_SLICERPRO = VM.getString(getProperty());
    public static final String VM_SNAP = VM.getString(getProperty());
    public static final String VM_SORT_OUT = VM.getString(getProperty());
    public static final String VM_SYMSPLITTER_BEHIND = VM.getString(getProperty());
    public static final String VM_SYMSPLITTER_BETWEEN = VM.getString(getProperty());
    public static final String VM_SYMSPLITTER_FRONT = VM.getString(getProperty());
    public static final String VM_TRIANGULATE = VM.getString(getProperty());
    public static final String VM_UNIFICATOR = VM.getString(getProperty());
    public static final String VM_UNIFY = VM.getString(getProperty());
    public static final String YTRUDER_AXIS = YTRUDER.getString(getProperty());
    public static final String YTRUDER_CONDLINE_ANGLE = YTRUDER.getString(getProperty());
    public static final String YTRUDER_DESCRIPTION = YTRUDER.getString(getProperty());
    public static final String YTRUDER_EXTRUDE_RADIALLY = YTRUDER.getString(getProperty());
    public static final String YTRUDER_PROJECTION_ON_PLANE = YTRUDER.getString(getProperty());
    public static final String YTRUDER_SYMMETRY_ACROSS_PLANE = YTRUDER.getString(getProperty());
    public static final String YTRUDER_TITLE = YTRUDER.getString(getProperty());
    public static final String YTRUDER_TRANSLATION_BY_DISTANCE = YTRUDER.getString(getProperty());
    public static final String YTRUDER_VALUE = YTRUDER.getString(getProperty());
    public static final String YTRUDER_VERBOSE = YTRUDER.getString(getProperty());
    public static final String YTRUDER_VERBOSE_MSG = YTRUDER.getString(getProperty());
    public static final String YTRUDER_X = YTRUDER.getString(getProperty());
    public static final String YTRUDER_Y = YTRUDER.getString(getProperty());
    public static final String YTRUDER_Z = YTRUDER.getString(getProperty());

    // Custom Methods
    public static String getCurrentUnit() {
        return UNITS.getString(View.unit);
    }

    private static Field[] getSortedFields() {
        Field[] fieldsToSort = I18n.class.getFields();

        SortedMap<String, Field> map = new TreeMap<>();

        for (Field f : fieldsToSort) {
            map.put(f.getName(), f);
        }

        Collection<Field> fields = map.values();
        return fields.toArray(new Field[fields.size()]);
    }

    // Clever reflection method to get the suffix YYY from XXX_YYY
    private static String getProperty()
    {
        if (notAdjusted) {
            adjust();
        }
        StackTraceElement[] stackTraceElements = new Throwable().getStackTrace();
        String stack = stackTraceElements[1].toString();
        int lineNumber  = Integer.parseInt(stack.substring(stack.lastIndexOf(":") + 1, stack.lastIndexOf(")"))); //$NON-NLS-1$ //$NON-NLS-2$
        String methodName = fields[lineNumber - lineOffset].getName();
        return methodName.substring(methodName.indexOf("_") + 1); //$NON-NLS-1$
    }

    static { // Make a test if the current locale use RTL layout
        if (!ComponentOrientation.getOrientation(MyLanguage.getLocale()).isLeftToRight()) {
            IS_RTL = true;
            I18N_RTL = SWT.RIGHT_TO_LEFT;
        } else {
            IS_RTL = false;
            I18N_RTL = SWT.NONE;
        }
    }
}
